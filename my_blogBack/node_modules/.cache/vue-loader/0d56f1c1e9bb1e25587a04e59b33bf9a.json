{"remainingRequest":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\user\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\user\\Users.vue","mtime":1564741682105},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  users_api,\r\n  usersType_api,\r\n  addUser_api,\r\n  editUser_api,\r\n  delete_api\r\n} from '@/api'\r\nimport { log } from 'util'\r\nexport default {\r\n  data() {\r\n    // 表单验证规则1\r\n    // 验证邮箱\r\n    var checkEmail = (rule, value, callback) => {\r\n      const regEmail = /^\\w+@\\w+(\\.\\w+)+$/\r\n      if (regEmail.test(value)) {\r\n        return callback()\r\n      }\r\n      // 返回错误提示\r\n      callback(new Error('请输入合法的邮箱'))\r\n    }\r\n    //验证手机规则\r\n    var checkMobile = (rule, value, callback) => {\r\n      const regMobile = /^1[34578]\\d{9}$/\r\n      if (regMobile.test(value)) {\r\n        return callback()\r\n      }\r\n      // 返回错误提示\r\n      callback(new Error('请输入合法的手机号'))\r\n    }\r\n    return {\r\n      editusersId: '', //编辑的用户id\r\n      addDialogVisible: false,\r\n      editDialogVisible: false,\r\n      input: '',\r\n      tableData: [],\r\n      queryInfo: {\r\n        query: '',\r\n        pagenum: 1,\r\n        pagesize: 2\r\n      },\r\n      total: 0,\r\n      userType: {},\r\n      addForm: {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        mobile: ''\r\n      },\r\n      editForm: {\r\n        username: '',\r\n        email: '',\r\n        mobile: ''\r\n      },\r\n      // 添加表单验证规则2\r\n      addFormRules: {\r\n        // 验证用户名\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' }\r\n        ],\r\n        // 验证密码\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' }\r\n        ],\r\n        //验证邮箱\r\n        email: [\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          {\r\n            validator: checkEmail,\r\n            message: '邮箱格式不正确，请重新输入',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        //  验证手机号\r\n        mobile: [\r\n          { required: true, message: '请输入手机号码', trigger: 'blur' },\r\n          {\r\n            validator: checkMobile,\r\n            message: '手机号码不正确，请重新输入',\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      //编辑表单验证规则2\r\n      editFormRules: {\r\n        // 验证用户名\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' }\r\n        ],\r\n        //验证邮箱\r\n        email: [\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          {\r\n            validator: checkEmail,\r\n            message: '邮箱格式不正确，请重新输入',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        //  验证手机号\r\n        mobile: [\r\n          { required: true, message: '请输入手机号码', trigger: 'blur' },\r\n          {\r\n            validator: checkMobile,\r\n            message: '手机号码不正确，请重新输入',\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    //获取用户列表函数\r\n    async getUsers() {\r\n      //   console.log(this.input)\r\n      this.queryInfo.query = this.input\r\n      const { data: res } = await users_api(this.queryInfo)\r\n      // console.log(this.queryInfo);\r\n      // console.log(res);\r\n      if (res.meta.status != 200)\r\n        return this.$message.error('获取用户数据列表失败')\r\n      this.$message.success('获取用户数据列表成功')\r\n      this.tableData = res.data.users\r\n      this.total = res.data.total\r\n    },\r\n    handleSizeChange(val) {\r\n      // console.log(`每页 ${val} 条`);\r\n      this.queryInfo.pagesize = val\r\n      this.getUsers()\r\n    },\r\n    handleCurrentChange(val) {\r\n      // console.log(`当前页: ${val}`);\r\n      this.queryInfo.pagenum = val\r\n      this.getUsers()\r\n    },\r\n    async userStateChanged(row) {\r\n      //改变状态函数\r\n      const { data: res } = await usersType_api({\r\n        id: row.id,\r\n        type: row.mg_state\r\n      })\r\n    },\r\n    addUser() {\r\n      //弹出添加用户表单\r\n      this.addDialogVisible = true\r\n    },\r\n    addDialogClosed() {\r\n      //关闭添加用户表单时清空状态\r\n      // console.log(this);\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    addUserList() {\r\n      this.$refs.addFormRef.validate(async result => {\r\n        // console.log(result);\r\n        if (!result) return this.$message.error('获取用户数据列表失败')\r\n        // console.log(this.addForm);\r\n        const { data: res } = await addUser_api(this.addForm)\r\n        console.log(res)\r\n        //判断如果添加失败，就做提示\r\n        if (res.meta.status !== 201) return this.$message.error('添加用户失败')\r\n        console.log('添加用户成功')\r\n        //添加成功的提示\r\n        this.$message.success('添加用户成功')\r\n        //关闭对话框\r\n        this.addDialogVisible = false\r\n        //重新请求最新的数据\r\n        this.getUsers()\r\n      })\r\n    },\r\n    editUser(res) {\r\n      //弹出添加用户表单\r\n      //   console.log(res);\r\n      this.editForm = {\r\n        username: res.username,\r\n        email: res.email,\r\n        mobile: res.mobile\r\n      }\r\n      this.editusersId = res.id\r\n      //   console.log(this.editusersId);\r\n\r\n      this.editDialogVisible = true\r\n    },\r\n    editDialogClosed() {\r\n      //关闭编辑用户表单时清空状态\r\n      // console.log(this);\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    editUserList() {\r\n      this.$refs.editFormRef.validate(async result => {\r\n        if (!result) return this.$message.error('修改失败')\r\n        const { data: res } = await editUser_api({\r\n          id: this.editusersId,\r\n          email: this.editForm.email,\r\n          mobile: this.editForm.mobile\r\n        })\r\n        // console.log(res);\r\n        //判断如果添加失败，就做提示\r\n        if (res.meta.status !== 200) return this.$message.error('添加用户失败')\r\n        console.log('添加用户成功')\r\n        //添加成功的提示\r\n        this.$message.success('添加用户成功')\r\n        //关闭对话框\r\n        this.editDialogVisible = false\r\n        //重新请求最新的数据\r\n        this.getUsers()\r\n      })\r\n    },\r\n    async open(rest) {\r\n      const confirmResult = await this.$confirm(\r\n        '此操作将永久删除该文件, 是否继续?',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定删除',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).catch(err => err)\r\n      //如果用户点击确认，则confirmResult 为'confirm'\r\n      //如果用户点击取消, 则confirmResult获取的就是catch的错误消息'cancel'\r\n      if (confirmResult != 'confirm') {\r\n        return this.$message.info('已经取消删除')\r\n      }\r\n\t//   console.log(confirmResult) //confirm代表确定\r\n\t  const {data:res}=await delete_api(rest.id)\r\n\t//   console.log(res);\r\n\t\t if (res.meta.status !== 200) return this.$message.error('删除用户失败')\r\n        //删除成功的提示\r\n        this.$message.success('删除用户成功')\r\n        //重新请求最新的数据\r\n        this.getUsers()\r\n    }\r\n  },\r\n  //   生命周期钩子函数\r\n  created() {\r\n    this.getUsers() //调取获取用户列表函数\r\n  }\r\n}\r\n",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"Users.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\r\n  <div class=\"User_list\">\r\n    <el-breadcrumb separator=\">\">\r\n      <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      <div class=\"text item\">\r\n        <el-input\r\n          clearable\r\n          @clear=\"getUsers\"\r\n          v-model=\"input\"\r\n          placeholder=\"请输入内容\"\r\n          style=\"width: 30%;\"\r\n        >\r\n          <el-button @click=\"getUsers\" slot=\"append\" icon=\"el-icon-search\"></el-button>\r\n        </el-input>\r\n        <el-button type=\"success\" style class=\"search_button\" @click=\"addUser\">添加用户</el-button>\r\n      </div>\r\n      <el-table :data=\"tableData\" stripe style=\"width: 100%\">\r\n        <el-table-column prop=\"id\" label=\"#\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"姓名\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"mobile\" label=\"电话\"></el-table-column>\r\n        <el-table-column prop=\"role_name\" label=\"角色\"></el-table-column>\r\n        <el-table-column prop=\"mg_state\" label=\"状态\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- {{ scope.row }} -->\r\n            <el-switch\r\n              @change=\"userStateChanged(scope.row)\"\r\n              v-model=\"scope.row.mg_state\"\r\n              active-color=\"#13ce66\"\r\n              inactive-color=\"#ff4949\"\r\n            ></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"address\" label=\"操作\" style=\"width: 200px\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 修改按钮 -->\r\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"editUser(scope.row)\"></el-button>\r\n            <!-- 删除按钮 -->\r\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"open(scope.row)\"></el-button>\r\n            <!-- 分配角色按钮 -->\r\n            <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n              <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"></el-button>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"block\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"queryInfo.pagenum\"\r\n          :page-sizes=\"[2, 5, 10, 20]\"\r\n          :page-size=\"queryInfo.pagesize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n        ></el-pagination>\r\n      </div>\r\n\r\n      <!-- 添加用户弹框 -->\r\n      <el-dialog title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n        <el-form ref=\"addFormRef\" :model=\"addForm\" :rules=\"addFormRules\" status-icon>\r\n          <!-- 账号 -->\r\n          <el-form-item prop=\"username\" class=\"username_input\">\r\n            <el-input\r\n              v-model=\"addForm.username\"\r\n              placeholder=\"请输入账号\"\r\n              prefix-icon=\"iconfont icon-user\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <!-- 密码 -->\r\n          <el-form-item prop=\"password\">\r\n            <el-input\r\n              v-model=\"addForm.password\"\r\n              placeholder=\"请输入密码\"\r\n              prefix-icon=\"iconfont icon-3702mima\"\r\n              type=\"password\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <!-- 邮箱 -->\r\n          <el-form-item prop=\"email\">\r\n            <el-input v-model=\"addForm.email\" placeholder=\"请输入邮箱\"></el-input>\r\n          </el-form-item>\r\n          <!-- 电话 -->\r\n          <el-form-item prop=\"mobile\">\r\n            <el-input v-model=\"addForm.mobile\" placeholder=\"请输入手机号\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addDialogVisible = false \">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addUserList\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n\r\n      <!-- 编辑用户弹框 -->\r\n      <el-dialog\r\n        title=\"编辑用户\"\r\n        :visible.sync=\"editDialogVisible\"\r\n        width=\"50%\"\r\n        @close=\"editDialogClosed\"\r\n      >\r\n        <el-form ref=\"editFormRef\" :model=\"editForm\" :rules=\"editFormRules\" status-icon>\r\n          <!-- 账号 -->\r\n          <el-form-item prop=\"username\" class=\"username_input\">\r\n            <el-input\r\n              v-model=\"editForm.username\"\r\n              placeholder=\"请输入账号\"\r\n              prefix-icon=\"iconfont icon-user\"\r\n              disabled\r\n            ></el-input>\r\n          </el-form-item>\r\n          <!-- 邮箱 -->\r\n          <el-form-item prop=\"email\">\r\n            <el-input v-model=\"editForm.email\" placeholder=\"请输入邮箱\"></el-input>\r\n          </el-form-item>\r\n          <!-- 电话 -->\r\n          <el-form-item prop=\"mobile\">\r\n            <el-input v-model=\"editForm.mobile\" placeholder=\"请输入手机号\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"editDialogVisible = false \">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"editUserList\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  users_api,\r\n  usersType_api,\r\n  addUser_api,\r\n  editUser_api,\r\n  delete_api\r\n} from '@/api'\r\nimport { log } from 'util'\r\nexport default {\r\n  data() {\r\n    // 表单验证规则1\r\n    // 验证邮箱\r\n    var checkEmail = (rule, value, callback) => {\r\n      const regEmail = /^\\w+@\\w+(\\.\\w+)+$/\r\n      if (regEmail.test(value)) {\r\n        return callback()\r\n      }\r\n      // 返回错误提示\r\n      callback(new Error('请输入合法的邮箱'))\r\n    }\r\n    //验证手机规则\r\n    var checkMobile = (rule, value, callback) => {\r\n      const regMobile = /^1[34578]\\d{9}$/\r\n      if (regMobile.test(value)) {\r\n        return callback()\r\n      }\r\n      // 返回错误提示\r\n      callback(new Error('请输入合法的手机号'))\r\n    }\r\n    return {\r\n      editusersId: '', //编辑的用户id\r\n      addDialogVisible: false,\r\n      editDialogVisible: false,\r\n      input: '',\r\n      tableData: [],\r\n      queryInfo: {\r\n        query: '',\r\n        pagenum: 1,\r\n        pagesize: 2\r\n      },\r\n      total: 0,\r\n      userType: {},\r\n      addForm: {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        mobile: ''\r\n      },\r\n      editForm: {\r\n        username: '',\r\n        email: '',\r\n        mobile: ''\r\n      },\r\n      // 添加表单验证规则2\r\n      addFormRules: {\r\n        // 验证用户名\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' }\r\n        ],\r\n        // 验证密码\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' }\r\n        ],\r\n        //验证邮箱\r\n        email: [\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          {\r\n            validator: checkEmail,\r\n            message: '邮箱格式不正确，请重新输入',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        //  验证手机号\r\n        mobile: [\r\n          { required: true, message: '请输入手机号码', trigger: 'blur' },\r\n          {\r\n            validator: checkMobile,\r\n            message: '手机号码不正确，请重新输入',\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      //编辑表单验证规则2\r\n      editFormRules: {\r\n        // 验证用户名\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' }\r\n        ],\r\n        //验证邮箱\r\n        email: [\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          {\r\n            validator: checkEmail,\r\n            message: '邮箱格式不正确，请重新输入',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        //  验证手机号\r\n        mobile: [\r\n          { required: true, message: '请输入手机号码', trigger: 'blur' },\r\n          {\r\n            validator: checkMobile,\r\n            message: '手机号码不正确，请重新输入',\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    //获取用户列表函数\r\n    async getUsers() {\r\n      //   console.log(this.input)\r\n      this.queryInfo.query = this.input\r\n      const { data: res } = await users_api(this.queryInfo)\r\n      // console.log(this.queryInfo);\r\n      // console.log(res);\r\n      if (res.meta.status != 200)\r\n        return this.$message.error('获取用户数据列表失败')\r\n      this.$message.success('获取用户数据列表成功')\r\n      this.tableData = res.data.users\r\n      this.total = res.data.total\r\n    },\r\n    handleSizeChange(val) {\r\n      // console.log(`每页 ${val} 条`);\r\n      this.queryInfo.pagesize = val\r\n      this.getUsers()\r\n    },\r\n    handleCurrentChange(val) {\r\n      // console.log(`当前页: ${val}`);\r\n      this.queryInfo.pagenum = val\r\n      this.getUsers()\r\n    },\r\n    async userStateChanged(row) {\r\n      //改变状态函数\r\n      const { data: res } = await usersType_api({\r\n        id: row.id,\r\n        type: row.mg_state\r\n      })\r\n    },\r\n    addUser() {\r\n      //弹出添加用户表单\r\n      this.addDialogVisible = true\r\n    },\r\n    addDialogClosed() {\r\n      //关闭添加用户表单时清空状态\r\n      // console.log(this);\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    addUserList() {\r\n      this.$refs.addFormRef.validate(async result => {\r\n        // console.log(result);\r\n        if (!result) return this.$message.error('获取用户数据列表失败')\r\n        // console.log(this.addForm);\r\n        const { data: res } = await addUser_api(this.addForm)\r\n        console.log(res)\r\n        //判断如果添加失败，就做提示\r\n        if (res.meta.status !== 201) return this.$message.error('添加用户失败')\r\n        console.log('添加用户成功')\r\n        //添加成功的提示\r\n        this.$message.success('添加用户成功')\r\n        //关闭对话框\r\n        this.addDialogVisible = false\r\n        //重新请求最新的数据\r\n        this.getUsers()\r\n      })\r\n    },\r\n    editUser(res) {\r\n      //弹出添加用户表单\r\n      //   console.log(res);\r\n      this.editForm = {\r\n        username: res.username,\r\n        email: res.email,\r\n        mobile: res.mobile\r\n      }\r\n      this.editusersId = res.id\r\n      //   console.log(this.editusersId);\r\n\r\n      this.editDialogVisible = true\r\n    },\r\n    editDialogClosed() {\r\n      //关闭编辑用户表单时清空状态\r\n      // console.log(this);\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    editUserList() {\r\n      this.$refs.editFormRef.validate(async result => {\r\n        if (!result) return this.$message.error('修改失败')\r\n        const { data: res } = await editUser_api({\r\n          id: this.editusersId,\r\n          email: this.editForm.email,\r\n          mobile: this.editForm.mobile\r\n        })\r\n        // console.log(res);\r\n        //判断如果添加失败，就做提示\r\n        if (res.meta.status !== 200) return this.$message.error('添加用户失败')\r\n        console.log('添加用户成功')\r\n        //添加成功的提示\r\n        this.$message.success('添加用户成功')\r\n        //关闭对话框\r\n        this.editDialogVisible = false\r\n        //重新请求最新的数据\r\n        this.getUsers()\r\n      })\r\n    },\r\n    async open(rest) {\r\n      const confirmResult = await this.$confirm(\r\n        '此操作将永久删除该文件, 是否继续?',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定删除',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).catch(err => err)\r\n      //如果用户点击确认，则confirmResult 为'confirm'\r\n      //如果用户点击取消, 则confirmResult获取的就是catch的错误消息'cancel'\r\n      if (confirmResult != 'confirm') {\r\n        return this.$message.info('已经取消删除')\r\n      }\r\n\t//   console.log(confirmResult) //confirm代表确定\r\n\t  const {data:res}=await delete_api(rest.id)\r\n\t//   console.log(res);\r\n\t\t if (res.meta.status !== 200) return this.$message.error('删除用户失败')\r\n        //删除成功的提示\r\n        this.$message.success('删除用户成功')\r\n        //重新请求最新的数据\r\n        this.getUsers()\r\n    }\r\n  },\r\n  //   生命周期钩子函数\r\n  created() {\r\n    this.getUsers() //调取获取用户列表函数\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.text {\r\n  font-size: 14px;\r\n}\r\n\r\n.item {\r\n  padding: 18px 0;\r\n}\r\n\r\n.box-card {\r\n  width: 100%;\r\n  .search_button {\r\n    margin-left: 20px;\r\n    background-color: #409eff;\r\n    border: 0;\r\n  }\r\n}\r\n.el-button--mini,\r\n.el-button--mini.is-round {\r\n  padding: 6px 10px !important;\r\n}\r\n</style>\r\n<style></style>\r\n"]}]}