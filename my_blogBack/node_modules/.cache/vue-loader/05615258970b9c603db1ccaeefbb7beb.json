{"remainingRequest":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\library\\my_library\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\library\\my_library\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\library\\my_library\\src\\components\\Login.vue","mtime":1578115282723},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\library\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\library\\my_library\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\library\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\library\\my_library\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {login_api} from \"@/api\"\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tloginForm: {\n\t\t\t\tusername: 'admin',\n\t\t\t\tpassword: '000000'\n\t\t\t},\n\t\t\t// 表单验证规则\n\t\t\tloginFormRules: {\n\t\t\t\t// 验证用户名\n\t\t\t\tusername: [{ required: true, message: 'Please enter your account number', trigger: 'blur' }, { min: 3, max: 20, message: '3 to 20 characters in length', trigger: 'blur' }],\n\t\t\t\t// 验证密码\n\t\t\t\tpassword: [{ required: true, message: 'Please input a password', trigger: 'blur' }, { min: 3, max: 6, message: '3 to 6 characters in length', trigger: 'blur' }]\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\treset() {\n\t\t\tthis.$refs.loginFormRef.resetFields()\n\t\t},\n\t\tlogin() {\n\t\t\tthis.$refs.loginFormRef.validate(async valid => {\n\t\t\t\tif (!valid) return this.$message.error('Incorrect input')\n                const { data: res}=await login_api(this.loginForm)\n\t\t\t\tif (res.status !== 200) return this.$message.error('Login failed')\n\t\t\t\tthis.$message.success('Login successfully')\n\t\t\t\t// 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\n\t\t\t\t//   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\n\t\t\t\t//   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\n\t\t\t\twindow.sessionStorage.setItem('token', res.data.token)\n\t\t\t\t// 跳转到index页面\n\t\t\t\tthis.$router.push('/index')\n\t\t\t})\n\t\t}\n\t}\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n\t<div class=\"component_login\">\r\n\t\t<div class=\"login_box\">\r\n\t\t\t<div class=\"left_img\">\r\n\t\t\t\t<img src=\"../assets/login.png\" alt=\"\" style=\"width:100%;height:100%\">\r\n\t\t\t</div>\r\n\t\t\t<!-- 头像 -->\r\n\t\t\t<!-- <div class=\"avatar_box\">\r\n        <img src=\"../assets/logo.png\" alt />\r\n\t\t\t</div>-->\r\n\t\t\t<!-- 输入框 -->\r\n\t\t\t<!-- 登录 -->\r\n\t\t\t<div class=\"right_form\">\r\n\t\t\t\t<el-form\r\n\t\t\t\t\tclass=\"login_form\"\r\n\t\t\t\t\tref=\"loginFormRef\"\r\n\t\t\t\t\t:model=\"loginForm\"\r\n\t\t\t\t\t:rules=\"loginFormRules\"\r\n\t\t\t\t\tlabel-width=\"0px\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t<i class=\"el-icon-s-platform\"></i>登录系统\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- 账号 -->\r\n\t\t\t\t\t<el-form-item prop=\"username\" class=\"username_input\">\r\n\t\t\t\t\t\t<el-input\r\n\t\t\t\t\t\t\tv-model=\"loginForm.username\"\r\n\t\t\t\t\t\t\tplaceholder=\"Please enter your account number\"\r\n\t\t\t\t\t\t\tprefix-icon=\"iconfont icon-user\"\r\n\t\t\t\t\t\t></el-input>\r\n\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t<!-- 密码 -->\r\n\t\t\t\t\t<el-form-item prop=\"password\" class=\"username_input\">\r\n\t\t\t\t\t\t<el-input\r\n\t\t\t\t\t\t\tv-model=\"loginForm.password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Please input a password\"\r\n\t\t\t\t\t\t\tprefix-icon=\"iconfont icon-3702mima\"\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t></el-input>\r\n\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t<!-- 按钮区域 -->\r\n\t\t\t\t\t<el-form-item class=\"btns\">\r\n\t\t\t\t\t\t<el-button class=\"loginIn\" type=\"info\" @click=\"login\">Sign in</el-button>\r\n\t\t\t\t\t</el-form-item>\r\n\t\t\t\t</el-form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\n    import {login_api} from \"@/api\"\r\n    export default {\r\n    \tdata() {\r\n    \t\treturn {\r\n    \t\t\tloginForm: {\r\n    \t\t\t\tusername: 'admin',\r\n    \t\t\t\tpassword: '000000'\r\n    \t\t\t},\r\n    \t\t\t// 表单验证规则\r\n    \t\t\tloginFormRules: {\r\n    \t\t\t\t// 验证用户名\r\n    \t\t\t\tusername: [{ required: true, message: 'Please enter your account number', trigger: 'blur' }, { min: 3, max: 20, message: '3 to 20 characters in length', trigger: 'blur' }],\r\n    \t\t\t\t// 验证密码\r\n    \t\t\t\tpassword: [{ required: true, message: 'Please input a password', trigger: 'blur' }, { min: 3, max: 6, message: '3 to 6 characters in length', trigger: 'blur' }]\r\n    \t\t\t}\r\n    \t\t}\r\n    \t},\r\n    \tmethods: {\r\n    \t\treset() {\r\n    \t\t\tthis.$refs.loginFormRef.resetFields()\r\n    \t\t},\r\n    \t\tlogin() {\r\n    \t\t\tthis.$refs.loginFormRef.validate(async valid => {\r\n    \t\t\t\tif (!valid) return this.$message.error('Incorrect input')\r\n                    const { data: res}=await login_api(this.loginForm)\r\n    \t\t\t\tif (res.status !== 200) return this.$message.error('Login failed')\r\n    \t\t\t\tthis.$message.success('Login successfully')\r\n    \t\t\t\t// 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\r\n    \t\t\t\t//   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\r\n    \t\t\t\t//   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\r\n    \t\t\t\twindow.sessionStorage.setItem('token', res.data.token)\r\n    \t\t\t\t// 跳转到index页面\r\n    \t\t\t\tthis.$router.push('/index')\r\n    \t\t\t})\r\n    \t\t}\r\n    \t}\r\n    };\r\n    </script>\r\n    <style lang=\"less\" scoped>\r\n    .component_login {\r\n    \twidth: 100%;\r\n    \theight: 100%;\r\n\t\tbackground: url(../assets/background.jpg) no-repeat;\r\n\t\tbackground-size: cover;\r\n\t\tposition: absolute;\r\n\t\toverflow: hidden;\r\n    \t.login_box {\r\n    \t\twidth: 650px;\r\n    \t\theight: 350px;\r\n    \t\tbackground-color: #FFFFF0;\r\n    \t\tposition: absolute;\r\n    \t\ttop: 50%;\r\n    \t\tleft: 50%;\r\n    \t\ttransform: translate(-50%, -50%);\r\n\t\t\tborder-radius: 5px;\r\n\t\t\toverflow: hidden;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\talign-items: center;\r\n\t\t\t.left_img {\r\n\t\t\t\twidth: 250px;\r\n\t\t\t\theight: 350px;\r\n\t\t\t}\r\n    \t\t.login_form {\r\n\t\t\t\tmargin-right: 60px;\r\n    \t\t\t.btns {\r\n    \t\t\t\tdisplay: flex;\r\n    \t\t\t\tjustify-content: center;\r\n\t\t\t\t\t.loginIn{\r\n\t\t\t\t\t\twidth:200px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t.title {\r\n\t\t\t\t\tfont-size: 16px;\r\n\t\t\t\t\tcolor: #000;\r\n\t\t\t\t\theight: 35px;\r\n\t\t\t\t\tline-height: 35px;\r\n\t\t\t\t\ti {\r\n\t\t\t\t\t\tcolor: #75B9E6;\r\n\t\t\t\t\t\tmargin-right:10px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t.username_input{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t\t/deep/ input {\r\n\t\t\t\t\t // border:1px solid #FFFFF0;\r\n\t\t\t\t\t width: 300px;\r\n\t\t\t\t\t background-color: #FFFFF0;\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n    \t\t}\r\n    \t}\r\n    }\r\n</style>\r\n"]}]}