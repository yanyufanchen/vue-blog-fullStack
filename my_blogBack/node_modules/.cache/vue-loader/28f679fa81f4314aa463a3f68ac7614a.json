{"remainingRequest":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\goods\\Categories.vue?vue&type=template&id=8cf3e7b6&scoped=true&","dependencies":[{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\goods\\Categories.vue","mtime":1565524504877},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"Breadcrumb\", { attrs: { value: _vm.common } }),\n      _c(\n        \"el-card\",\n        { staticClass: \"box-card\" },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"text item\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"search_button\",\n                  attrs: { type: \"success\" },\n                  on: { click: _vm.showCatedialogVisible }\n                },\n                [_vm._v(\"添加分类\")]\n              )\n            ],\n            1\n          ),\n          _c(\"tree-table\", {\n            attrs: {\n              \"index-text\": \"#\",\n              data: _vm.cateList,\n              columns: _vm.columns,\n              stripe: _vm.props.stripe,\n              border: _vm.props.border,\n              \"show-header\": _vm.props.showHeader,\n              \"show-summary\": _vm.props.showSummary,\n              \"show-row-hover\": _vm.props.showRowHover,\n              \"show-index\": _vm.props.showIndex,\n              \"tree-type\": _vm.props.treeType,\n              \"is-fold\": _vm.props.isFold,\n              \"expand-type\": _vm.props.expandType,\n              \"selection-type\": _vm.props.selectionType\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"valid\",\n                fn: function(scope) {\n                  return [\n                    !scope.row.cat_deleted\n                      ? _c(\"i\", {\n                          staticClass: \"el-icon-success\",\n                          staticStyle: { color: \"#85ce61\", \"font-size\": \"16px\" }\n                        })\n                      : _c(\"i\", {\n                          staticClass: \"el-icon-error\",\n                          staticStyle: { color: \"red\", \"font-size\": \"16px\" }\n                        })\n                  ]\n                }\n              },\n              {\n                key: \"sort\",\n                fn: function(scope) {\n                  return [\n                    scope.row.cat_level == 0\n                      ? _c(\"el-tag\", [_vm._v(\"一级\")])\n                      : scope.row.cat_level == 1\n                      ? _c(\"el-tag\", { attrs: { type: \"success\" } }, [\n                          _vm._v(\"二级\")\n                        ])\n                      : _c(\"el-tag\", { attrs: { type: \"warning\" } }, [\n                          _vm._v(\"三级\")\n                        ])\n                  ]\n                }\n              },\n              {\n                key: \"operation\",\n                fn: function(scope) {\n                  return [\n                    _c(\"el-button\", {\n                      attrs: {\n                        type: \"primary\",\n                        icon: \"el-icon-edit\",\n                        size: \"mini\"\n                      }\n                    }),\n                    _c(\"el-button\", {\n                      attrs: {\n                        type: \"danger\",\n                        icon: \"el-icon-delete\",\n                        size: \"mini\"\n                      }\n                    })\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-pagination\", {\n            attrs: {\n              background: \"\",\n              \"current-page\": _vm.queryInfo.pagenum,\n              \"page-sizes\": [2, 5, 10, 20],\n              \"page-size\": _vm.queryInfo.pagesize,\n              layout: \"total, sizes, prev, pager, next, jumper\",\n              total: _vm.total\n            },\n            on: {\n              \"size-change\": _vm.handleSizeChange,\n              \"current-change\": _vm.handleCurrentChange\n            }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"添加分类\",\n            visible: _vm.CatedialogVisible,\n            width: \"40%\",\n            \"before-close\": _vm.handleClose\n          },\n          on: {\n            close: _vm.addCateClose,\n            \"update:visible\": function($event) {\n              _vm.CatedialogVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"cateFormRef\",\n              attrs: {\n                model: _vm.addCateForm,\n                rules: _vm.cateFormRules,\n                \"label-width\": \"100px\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { prop: \"cateName\", label: \"活动名称:\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      placeholder: \"请输入分类名称\",\n                      \"prefix-icon\": \"iconfont icon-user\"\n                    },\n                    model: {\n                      value: _vm.addCateForm.cateName,\n                      callback: function($$v) {\n                        _vm.$set(_vm.addCateForm, \"cateName\", $$v)\n                      },\n                      expression: \"addCateForm.cateName\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"分类名称:\" } },\n                [\n                  _c(\"el-cascader\", {\n                    staticStyle: { width: \"100%\" },\n                    attrs: {\n                      clearable: \"\",\n                      \"change-on-select\": \"\",\n                      options: _vm.options,\n                      props: {\n                        expandTrigger: \"hover\",\n                        value: \"cat_id\",\n                        label: \"cat_name\",\n                        children: \"children\"\n                      }\n                    },\n                    on: { change: _vm.handleChange },\n                    model: {\n                      value: _vm.selectedKeys,\n                      callback: function($$v) {\n                        _vm.selectedKeys = $$v\n                      },\n                      expression: \"selectedKeys\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.CatedialogVisible = false\n                    }\n                  }\n                },\n                [_vm._v(\"取 消\")]\n              ),\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.addCateName } },\n                [_vm._v(\"确 定\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}