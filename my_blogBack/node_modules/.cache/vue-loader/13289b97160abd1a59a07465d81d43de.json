{"remainingRequest":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\Login.vue","mtime":1576915348367},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import {login_api} from \"@/api\"\n    export default {\n    \tdata() {\n    \t\treturn {\n    \t\t\tloginForm: {\n    \t\t\t\tusername: 'admin',\n    \t\t\t\tpassword: '000000'\n    \t\t\t},\n    \t\t\t// 表单验证规则\n    \t\t\tloginFormRules: {\n    \t\t\t\t// 验证用户名\n    \t\t\t\tusername: [{ required: true, message: '请输入用户名', trigger: 'blur' }, { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }],\n    \t\t\t\t// 验证密码\n    \t\t\t\tpassword: [{ required: true, message: '请输入密码', trigger: 'blur' }, { min: 3, max: 6, message: '长度在 3 到 6 个字符', trigger: 'blur' }]\n    \t\t\t}\n    \t\t}\n    \t},\n    \tmethods: {\n    \t\treset() {\n    \t\t\t// console.log(this.$refs.loginFormRef);\n    \t\t\tthis.$refs.loginFormRef.resetFields()\n    \t\t},\n    \t\tlogin() {\n    \t\t\tthis.$refs.loginFormRef.validate(async valid => {\n\t\t\t\t\tconsole.log(valid,'登录');\n\t\t\t\t\t\n    \t\t\t\tif (!valid) return this.$message.error('输入有误');\n                    const { data: res}=await login_api(this.loginForm);\n                    console.log(res);\n    \t\t\t\tif (res.status != 200) {\n    \t\t\t\t\treturn this.$message.error('登录失败');\n    \t\t\t\t}\n    \t\t\t\tthis.$message.success('登录成功');\n    \t\t\t\t// 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\n    \t\t\t\t//   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\n    \t\t\t\t//   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\n    \t\t\t\twindow.sessionStorage.setItem('token', res.data.token);\n    \t\t\t\t// 跳转到home页面\n    \t\t\t\tthis.$router.push('/home');\n    \t\t\t})\n    \t\t}\n    \t}\n    };\n    ",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"component_login\">\r\n    <div class=\"login_box\">\r\n      <!-- 头像 -->\r\n      <div class=\"avatar_box\">\r\n        <img src=\"../assets/logo.png\" alt />\r\n      </div>\r\n      <!-- 输入框 -->\r\n      <!-- 登录 -->\r\n      <el-form\r\n        class=\"login_form\"\r\n        ref=\"loginFormRef\"\r\n        :model=\"loginForm\"\r\n        :rules=\"loginFormRules\"\r\n        label-width=\"0px\"\r\n      >\r\n        <!-- 账号 -->\r\n        <el-form-item prop=\"username\" class=\"username_input\">\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            placeholder=\"请输入账号\"\r\n            prefix-icon=\"iconfont icon-user\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <!-- 密码 -->\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"loginForm.password\"\r\n            placeholder=\"请输入密码\"\r\n            prefix-icon=\"iconfont icon-3702mima\"\r\n            type=\"password\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <!-- 按钮区域 -->\r\n        <el-form-item class=\"btns\">\r\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n          <el-button type=\"info\" @click=\"reset\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n    import {login_api} from \"@/api\"\r\n    export default {\r\n    \tdata() {\r\n    \t\treturn {\r\n    \t\t\tloginForm: {\r\n    \t\t\t\tusername: 'admin',\r\n    \t\t\t\tpassword: '000000'\r\n    \t\t\t},\r\n    \t\t\t// 表单验证规则\r\n    \t\t\tloginFormRules: {\r\n    \t\t\t\t// 验证用户名\r\n    \t\t\t\tusername: [{ required: true, message: '请输入用户名', trigger: 'blur' }, { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }],\r\n    \t\t\t\t// 验证密码\r\n    \t\t\t\tpassword: [{ required: true, message: '请输入密码', trigger: 'blur' }, { min: 3, max: 6, message: '长度在 3 到 6 个字符', trigger: 'blur' }]\r\n    \t\t\t}\r\n    \t\t}\r\n    \t},\r\n    \tmethods: {\r\n    \t\treset() {\r\n    \t\t\t// console.log(this.$refs.loginFormRef);\r\n    \t\t\tthis.$refs.loginFormRef.resetFields()\r\n    \t\t},\r\n    \t\tlogin() {\r\n    \t\t\tthis.$refs.loginFormRef.validate(async valid => {\r\n\t\t\t\t\tconsole.log(valid,'登录');\r\n\t\t\t\t\t\r\n    \t\t\t\tif (!valid) return this.$message.error('输入有误');\r\n                    const { data: res}=await login_api(this.loginForm);\r\n                    console.log(res);\r\n    \t\t\t\tif (res.status != 200) {\r\n    \t\t\t\t\treturn this.$message.error('登录失败');\r\n    \t\t\t\t}\r\n    \t\t\t\tthis.$message.success('登录成功');\r\n    \t\t\t\t// 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\r\n    \t\t\t\t//   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\r\n    \t\t\t\t//   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\r\n    \t\t\t\twindow.sessionStorage.setItem('token', res.data.token);\r\n    \t\t\t\t// 跳转到home页面\r\n    \t\t\t\tthis.$router.push('/home');\r\n    \t\t\t})\r\n    \t\t}\r\n    \t}\r\n    };\r\n    </script>\r\n    <style lang=\"less\" scoped>\r\n    .component_login {\r\n    \twidth: 100%;\r\n    \theight: 100%;\r\n    \tbackground-color: #2b4b6b;\r\n    \t.login_box {\r\n    \t\twidth: 450px;\r\n    \t\theight: 300px;\r\n    \t\tbackground-color: #fff;\r\n    \t\tposition: absolute;\r\n    \t\ttop: 50%;\r\n    \t\tleft: 50%;\r\n    \t\ttransform: translate(-50%, -50%);\r\n    \t\tborder-radius: 10px;\r\n    \t\t.avatar_box {\r\n    \t\t\theight: 130px;\r\n    \t\t\twidth: 130px;\r\n    \t\t\tborder: 10px solid #fff;\r\n    \t\t\tbackground-color: #eee;\r\n    \t\t\tborder-radius: 50%;\r\n    \t\t\toverflow: hidden;\r\n    \t\t\tposition: absolute;\r\n    \t\t\ttop: 0;\r\n    \t\t\tleft: 50%;\r\n    \t\t\ttransform: translate(-50%, -50%);\r\n    \t\t\tbox-shadow: 0 0 10px #ddd;\r\n    \t\t\timg {\r\n    \t\t\t\twidth: 100%;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t\t.login_form {\r\n    \t\t\tposition: absolute;\r\n    \t\t\tbottom: 0;\r\n    \t\t\twidth: 100%;\r\n    \t\t\tpadding: 0 20px;\r\n    \t\t\tbox-sizing: border-box;\r\n    \t\t\t.btns {\r\n    \t\t\t\tdisplay: flex;\r\n    \t\t\t\tjustify-content: center;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n    }\r\n</style>\r\n"]}]}