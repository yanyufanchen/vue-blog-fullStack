{"remainingRequest":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\goods\\Params.vue?vue&type=style&index=0&id=8c7b49e2&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\goods\\Params.vue","mtime":1565526455052},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\less-loader\\dist\\cjs.js","mtime":1576755764101},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.alert {\r\n  margin: 10px 0;\r\n}\r\n.el-tag {\r\n  margin: 10px;\r\n}\r\n.el-tag + .el-tag {\r\n  margin-left: 10px;\r\n}\r\n.button-new-tag {\r\n  margin-left: 10px;\r\n  height: 32px;\r\n  line-height: 30px;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n}\r\n.input-new-tag {\r\n  width: 90px;\r\n  margin: 10px;\r\n  vertical-align: bottom;\r\n}\r\n",{"version":3,"sources":["Params.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Params.vue","sourceRoot":"src/components/goods","sourcesContent":["\r\n<template>\r\n  <div>\r\n    <Breadcrumb :value=\"common\"></Breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      <div class=\"text item\">\r\n        <el-button type=\"success\" style class=\"search_button\">添加分类</el-button>\r\n      </div>\r\n      <!-- 提示信息 -->\r\n      <el-alert\r\n        class=\"alert\"\r\n        title=\"注意：只允许为第三级分类设置相关参数！\"\r\n        type=\"warning\"\r\n        show-icon\r\n        :closable=\"false\"\r\n      ></el-alert>\r\n\r\n      <el-form ref=\"goodscateFormRef\" label-width=\"110px\">\r\n        <!-- 多级分类信息 -->\r\n        <el-form-item label=\"选择商品分类：\">\r\n          <el-cascader\r\n            style=\"width:20%\"\r\n            clearable\r\n            v-model=\"selectedKeys\"\r\n            :options=\"options\"\r\n            :props=\"{ \r\n              expandTrigger: 'hover',\r\n              value:'cat_id',\r\n              label:'cat_name',\r\n                children:'children'\r\n               }\"\r\n            @change=\"handleChange\"\r\n          ></el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- tab栏 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n        <!-- tabs用户管理 -->\r\n        <el-tab-pane label=\"用户管理\" name=\"first\">\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"isBtnDisablad\"\r\n            @click=\"addParamsVisible = true\"\r\n          >添加参数</el-button>\r\n          <el-table :data=\"manytableData\" style=\"width: 100%\">\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"props\">\r\n                <el-form label-position=\"left\" inline class=\"demo-table-expand\">\r\n                  <!-- 渲染参数标签 -->\r\n                  <el-tag\r\n                    v-for=\"(tag,index) in props.row.attr_vals\"\r\n                    :key=\"index\"\r\n                    closable\r\n                    type=\"danger\"\r\n                    class=\"el-tag\"\r\n                    @close=\"closeParams(props.row,tag)\"\r\n                  >{{tag}}</el-tag>\r\n                  <!-- 追加参数标签 -->\r\n                  <el-input\r\n                    class=\"input-new-tag\"\r\n                    v-if=\"props.row.inputVisible\"\r\n                    v-model=\"addparamValue\"\r\n                    ref=\"saveTagInput\"\r\n                    size=\"small\"\r\n                    @keyup.enter.native=\"handleInputConfirm(props.row)\"\r\n                    @blur=\"handleInputConfirm(props.row)\"\r\n                  ></el-input>\r\n                  <el-button\r\n                    v-else\r\n                    class=\"button-new-tag\"\r\n                    size=\"small\"\r\n                    @click=\"showInput(props.row)\"\r\n                  >+ New Tag</el-button>\r\n                </el-form>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"#\" type=\"index\"></el-table-column>\r\n            <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\r\n            <el-table-column label=\"操作\" width=\"300px\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"editCateParamsName(scope.row)\"\r\n                >编辑</el-button>\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"deleteCateParams(scope.row)\"\r\n                >删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <!-- tabs配置管理 -->\r\n        <el-tab-pane label=\"配置管理\" name=\"second\">\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"isBtnDisablad\"\r\n            @click=\"addParamsVisible = true\"\r\n          >添加参数</el-button>\r\n          <el-table :data=\"onlytableData\" style=\"width: 100%\">\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"props\">\r\n                <el-form label-position=\"left\" inline class=\"demo-table-expand\">\r\n                  <!-- <el-form-item>\r\n                    <span>{{ props.row.attr_vals }}</span>\r\n                  </el-form-item>-->\r\n                  <el-tag closable type=\"danger\" class=\"el-tag\">{{props.row.attr_vals}}</el-tag>\r\n                </el-form>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"#\" type=\"index\"></el-table-column>\r\n            <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\r\n            <el-table-column label=\"操作\" width=\"300px\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\">编辑</el-button>\r\n                <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\">删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n    <!-- 添加参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"'添加'+titleText\"\r\n      :visible.sync=\"addParamsVisible\"\r\n      width=\"45%\"\r\n      :before-close=\"handleClose\"\r\n    >\r\n      <el-form\r\n        :model=\"addParamsForm\"\r\n        status-icon\r\n        :rules=\"paramsrules\"\r\n        ref=\"addParamsFormRef\"\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"paramsName\">\r\n          <el-input v-model=\"addParamsForm.paramsName\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addParamsVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCateParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 编辑参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"'编辑'+titleText\"\r\n      :visible.sync=\"editParamsVisible\"\r\n      width=\"45%\"\r\n      :before-close=\"handleClose\"\r\n    >\r\n      <el-form\r\n        :model=\"editParamsForm\"\r\n        status-icon\r\n        :rules=\"paramsrules\"\r\n        ref=\"editParamsFormRef\"\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editParamsForm.attr_name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editParamsVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editCateParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getCategoriesList_api,\r\n  getattributes_api,\r\n  changeParams_api,\r\n  addCateParams_api,\r\n  deleteCateParams_api,\r\n  \r\n} from '@/api'\r\nimport {\r\n changeParamsCommon\r\n} from '@/api/compute.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            common: ['商品管理', '分类参数'], //公共组件传值\r\n            //   联级选择器\r\n            //绑定用户选择的分类值\r\n            selectedKeys: [], //选中选择器id数组\r\n            //此为选择器需要获取的数据\r\n            options: [], \r\n            activeName: 'first',//动态参数\r\n            manytableData: [],\r\n            //静态参数\r\n            onlytableData: [],\r\n            //tab栏切换属性\r\n            sel: 'many',\r\n            addparamValue: '', //追加参数标签的value值\r\n            addParamsVisible: false, //添加参数对话框的显示与隐藏\r\n            editParamsVisible: false, //编辑参数对话框的显示与隐藏\r\n            addParamsForm: {}, //添加参数表单  \r\n            //编辑参数表单\r\n            editParamsForm: {\r\n              attr_name: ''\r\n            }, \r\n            paramsrules: {\r\n                paramsName: [\r\n                    { required: true, message: '请输入参数名称', trigger: 'blur' },\r\n                    { min: 2, max: 8, message: '长度在 2 到 8 个字符', trigger: 'blur' }\r\n                ],\r\n                attr_name: [\r\n                    { required: true, message: '请输入参数名称', trigger: 'blur' },\r\n                    { min: 2, max: 8, message: '长度在 2 到 8 个字符', trigger: 'blur' }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.getGoodsCateList()\r\n    },\r\n    computed: {\r\n        isBtnDisablad() {\r\n            if (this.selectedKeys.length !== 3) {\r\n              return true\r\n            }\r\n            return false\r\n        },\r\n        titleText() {\r\n            if (this.sel == 'many') {\r\n              return '动态参数'\r\n            } else if (this.sel == 'only') {\r\n              return '静态属性'\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        //分类选中，执行\r\n        //获取选择器的值\r\n        //当选择器值改变时触发\r\n        handleChange(value) {\r\n            if (this.selectedKeys.length > 0) {\r\n                this.getattributes()\r\n            } else {\r\n              //当用户删除选中分类，就清空下面的参数信息\r\n                this.manytableData = []\r\n                this.onlytableData = []\r\n            }\r\n        },\r\n        //获取分类信息\r\n        async getGoodsCateList() {\r\n        const { data: res } = await getCategoriesList_api()\r\n            //   console.log(res)\r\n            if (res.meta.status != 200)\r\n                return this.$message.error('获取商品分类列表失败')\r\n            this.$message.success('获取商品分类列表成功')\r\n            this.options = res.data\r\n        },\r\n        //tab栏切换执行函数\r\n        // console.log(tab.name);\r\n        handleClick(tab, event) {\r\n            if (tab.name == 'first') {\r\n                this.sel = 'many'\r\n            } else if (tab.name == 'second') {\r\n                this.sel = 'only'\r\n            }\r\n            // console.log(this.sel, 666)\r\n            if (this.selectedKeys.length > 0) {\r\n                //如果用户选择了分类,才执行获取数据函数\r\n                // console.log(22)\r\n                this.getattributes()\r\n            }\r\n        },\r\n        //获取指定分类的参数\r\n        async getattributes() {\r\n            //获取参数\r\n            const { data: res } = await getattributes_api({\r\n                id: this.selectedKeys[this.selectedKeys.length - 1],\r\n                sel: this.sel\r\n            })\r\n            //   console.log(res.data)\r\n            if (res.meta.status != 200)\r\n                return this.$message.error('获取商品分类参数失败')\r\n            this.$message.success('获取商品分类参数成功')\r\n            //   console.log(res.data);\r\n            res.data.forEach(item => {\r\n            //添加自定义状态，控制input的显示与隐藏\r\n                item.inputVisible = false\r\n                item.attr_vals.length > 0 ? (item.attr_vals = item.attr_vals.split(',')) : (item.attr_vals = [])\r\n          })\r\n          this.sel == 'many'\r\n            ? (this.manytableData = res.data)\r\n            : (this.onlytableData = res.data)\r\n        },\r\n        // 添加参数名称\r\n        async addCateParams() {\r\n            const { data: res } = await addCateParams_api({\r\n                attr_name: this.addParamsForm.paramsName,\r\n                attr_sel: this.sel,\r\n                id: this.selectedKeys[this.selectedKeys.length - 1]\r\n            })\r\n            //   console.log(res)\r\n            if (res.meta.status !== 201)\r\n                return this.$message.error('添加商品分类参数失败')\r\n            this.$message.success('添加商品分类参数成功')\r\n            this.getattributes()\r\n            this.addParamsVisible = false\r\n        },\r\n        // 编辑参数名称\r\n        editCateParamsName(row) {\r\n            //   console.log(row)\r\n            this.editParamsVisible = true\r\n            this.editParamsForm.attr_name = row.attr_name\r\n            this.editParamsForm.attrId = row.attr_id\r\n            this.editParamsForm.id = row.cat_id\r\n            this.editParamsForm.attr_sel = row.attr_sel\r\n            this.editParamsForm.attr_vals = row.attr_vals.join()\r\n        },\r\n        // 编辑参数提交\r\n        editCateParams() {\r\n            //   console.log(this.editParamsForm)\r\n            // if (this.editParamsForm.paramsName.trim()=='') return this.$message.error('请填写正确的参数名称')\r\n            this.$refs.editParamsFormRef.validate(async result => {\r\n                if (!result) return this.$message.error('修改失败')\r\n                const { data: res } = await changeParams_api(this.editParamsForm)\r\n                // console.log(res);\r\n                if (res.meta.status !== 200)\r\n                return this.$message.error('修改商品分类参数失败')\r\n                this.$message.success('修改商品分类参数成功')\r\n                this.editParamsVisible = false\r\n                this.getattributes()\r\n            })\r\n        },\r\n        // 删除参数名称\r\n        async deleteCateParams(row) {\r\n            // console.log(row)\r\n            const confirmResult = await this.$confirm(\r\n                '此操作将永久删除该文件, 是否继续?',\r\n                '提示',\r\n                {\r\n                  confirmButtonText: '确定删除',\r\n                  cancelButtonText: '取消',\r\n                  type: 'warning'\r\n                }\r\n            ).catch(err => err)\r\n            //如果用户点击确认，则confirmResult 为'confirm'\r\n            //如果用户点击取消, 则confirmResult获取的就是catch的错误消息'cancel'\r\n            if (confirmResult !== 'confirm') {\r\n              return this.$message.info('已经取消删除')\r\n            }\r\n            //   console.log(row)\r\n\r\n            const { data: res } = await deleteCateParams_api({\r\n                id: row.cat_id,\r\n                attrid: row.attr_id\r\n            })\r\n            if (res.meta.status !== 200)\r\n                return this.$message.error('删除商品分类参数失败')\r\n            this.$message.success('删除商品分类参数成功')\r\n            this.getattributes()\r\n        },\r\n        // 追加参数标签显示input\r\n        showInput(rose) {\r\n            //参数\r\n            //   console.log(rose);\r\n            // 从标签切换到inut\r\n            rose.inputVisible = true\r\n            // input自动获得焦点\r\n            // $nextTick就是当页面的input渲染出来的时候，才执行里面的函数,因为input使用了v-if,切换的时候需要页面重绘\r\n            this.$nextTick(_ => {\r\n                this.$refs.saveTagInput.$refs.input.focus()\r\n            })\r\n        },\r\n        // input结束执行添加参数标签\r\n        async handleInputConfirm(rose) {\r\n            if (this.addparamValue.trim().length == 0) {\r\n                this.addparamValue = ''\r\n                rose.inputVisible = false\r\n                return\r\n            }\r\n            rose.attr_vals.push(this.addparamValue.trim())\r\n            this.addparamValue = ''\r\n            rose.inputVisible = false\r\n            //   console.log(rose)\r\n             // 调用compute-api更新数据库参数属性\r\n            changeParamsCommon(rose).then(res => {\r\n                // console.log(res)\r\n                if (res.meta.status != 200) return this.$message.error('更新参数属性失败')\r\n                this.$message.success('更新参数属性成功')\r\n            })\r\n        },\r\n        async closeParams(row, tag) {\r\n            const confirmResult = await this.$confirm(\r\n              '此操作将永久删除该文件, 是否继续?',\r\n              '提示',\r\n              {\r\n                confirmButtonText: '确定删除',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n              }\r\n            ).catch(err => err)\r\n            //如果用户点击确认，则confirmResult 为'confirm'\r\n            //如果用户点击取消, 则confirmResult获取的就是catch的错误消息'cancel'\r\n            if (confirmResult !== 'confirm') {\r\n                return this.$message.info('已经取消删除')\r\n            }\r\n            row.attr_vals.pop(tag)\r\n            // 调用更新数据库参数属性\r\n            changeParamsCommon(row).then(res => {\r\n                // console.log(res)\r\n                if (res.meta.status !== 200)\r\n                return this.$message.error('删除参数属性失败')\r\n                this.$message.success('删除参数属性成功')\r\n            })\r\n        },\r\n        handleClose(done) {\r\n            this.addParamsVisible = false\r\n            this.editParamsVisible = false\r\n        },\r\n      }\r\n    }\r\n</script>\r\n<style lang='less' scoped>\r\n.alert {\r\n  margin: 10px 0;\r\n}\r\n.el-tag {\r\n  margin: 10px;\r\n}\r\n.el-tag + .el-tag {\r\n  margin-left: 10px;\r\n}\r\n.button-new-tag {\r\n  margin-left: 10px;\r\n  height: 32px;\r\n  line-height: 30px;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n}\r\n.input-new-tag {\r\n  width: 90px;\r\n  margin: 10px;\r\n  vertical-align: bottom;\r\n}\r\n</style>"]}]}