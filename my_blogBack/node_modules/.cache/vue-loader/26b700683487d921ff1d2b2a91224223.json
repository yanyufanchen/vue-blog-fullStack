{"remainingRequest":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\goods\\Categories.vue?vue&type=style&index=0&id=8cf3e7b6&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\goods\\Categories.vue","mtime":1565524504877},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\less-loader\\dist\\cjs.js","mtime":1576755764101},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.search_button {\r\n  margin-bottom: 10px;\r\n}\r\n",{"version":3,"sources":["Categories.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0PA;AACA;AACA","file":"Categories.vue","sourceRoot":"src/components/goods","sourcesContent":["\r\n<template>\r\n  <div>\r\n    <Breadcrumb :value=\"common\"></Breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      <div class=\"text item\">\r\n        <el-button type=\"success\" style class=\"search_button\" @click=\"showCatedialogVisible\">添加分类</el-button>\r\n      </div>\r\n      <tree-table\r\n        index-text=\"#\"\r\n        :data=\"cateList\"\r\n        :columns=\"columns\"\r\n        :stripe=\"props.stripe\"\r\n        :border=\"props.border\"\r\n        :show-header=\"props.showHeader\"\r\n        :show-summary=\"props.showSummary\"\r\n        :show-row-hover=\"props.showRowHover\"\r\n        :show-index=\"props.showIndex\"\r\n        :tree-type=\"props.treeType\"\r\n        :is-fold=\"props.isFold\"\r\n        :expand-type=\"props.expandType\"\r\n        :selection-type=\"props.selectionType\"\r\n      >\r\n        <!-- 自定义列‘是否有效’ -->\r\n        <template slot=\"valid\" scope=\"scope\">\r\n          <i\r\n            v-if=\"!scope.row.cat_deleted\"\r\n            class=\"el-icon-success\"\r\n            style=\"color:#85ce61;font-size:16px\"\r\n          ></i>\r\n          <i v-else class=\"el-icon-error\" style=\"color:red;font-size:16px\"></i>\r\n        </template>\r\n        <!-- 排序 -->\r\n        <template slot=\"sort\" scope=\"scope\">\r\n          <el-tag v-if=\"scope.row.cat_level==0\">一级</el-tag>\r\n          <el-tag type=\"success\" v-else-if=\"scope.row.cat_level==1\">二级</el-tag>\r\n          <el-tag type=\"warning\" v-else>三级</el-tag>\r\n        </template>\r\n        <!-- 操作 -->\r\n        <template slot=\"operation\" scope=\"scope\">\r\n          <!-- 修改按钮 -->\r\n          <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"></el-button>\r\n          <!-- 删除按钮 -->\r\n          <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"></el-button>\r\n        </template>\r\n      </tree-table>\r\n      <!-- //分页 -->\r\n      <el-pagination\r\n        background\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[2, 5, 10, 20]\"\r\n        :page-size=\"queryInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      ></el-pagination>\r\n    </el-card>\r\n    <!-- 添加分类的对话框 -->\r\n    <el-dialog\r\n      @close=\"addCateClose\"\r\n      title=\"添加分类\"\r\n      :visible.sync=\"CatedialogVisible\"\r\n      width=\"40%\"\r\n      :before-close=\"handleClose\"\r\n    >\r\n      <el-form ref=\"cateFormRef\" :model=\"addCateForm\" :rules=\"cateFormRules\" label-width=\"100px\">\r\n        <!-- 账号 -->\r\n        <el-form-item prop=\"cateName\" label=\"活动名称:\">\r\n          <el-input\r\n            v-model=\"addCateForm.cateName\"\r\n            placeholder=\"请输入分类名称\"\r\n            prefix-icon=\"iconfont icon-user\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <!-- 多级分类信息 -->\r\n        <el-form-item label=\"分类名称:\">\r\n          <el-cascader\r\n            style=\"width:100%\"\r\n            clearable\r\n            change-on-select\r\n            v-model=\"selectedKeys\"\r\n            :options=\"options\"\r\n            :props=\"{ \r\n              expandTrigger: 'hover',\r\n              value:'cat_id',\r\n              label:'cat_name',\r\n                children:'children'\r\n               }\"\r\n            @change=\"handleChange\"\r\n          ></el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"CatedialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCateName\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    import { getCategoriesList_api ,addCateName_api} from '@/api'\r\n    export default {\r\n        data() {\r\n            return {\r\n                CatedialogVisible: false, //对话框显示隐藏\r\n                addCateForm: {\r\n                //对话框内分类名称value\r\n                cateName: '',\r\n                \r\n                },\r\n                // 表单验证规则\r\n                cateFormRules: {\r\n                    // 验证用户名\r\n                    cateName: [\r\n                      { required: true, message: '请输入用户名', trigger: 'blur' },\r\n                      { min: 2, max: 8, message: '长度在 2 到 8 个字符', trigger: 'blur' }\r\n                    ]\r\n                },\r\n            \r\n                common: ['商品管理', '商品分类'], //公共组件传值\r\n                cateList: [], //获取分类数据\r\n                queryInfo: {\r\n                    //请求商品列表参数\r\n                    pagenum: 1,\r\n                    pagesize: 5\r\n                },\r\n                total: 0, //总页数\r\n                //   树状结构参数\r\n                props: {\r\n                    stripe: false,\r\n                    border: true,\r\n                    showHeader: true,\r\n                    showSummary: false,\r\n                    showRowHover: false,\r\n                    showIndex: true,\r\n                    treeType: true,\r\n                    isFold: true,\r\n                    expandType: false,\r\n                    selectionType: false\r\n                },\r\n                //   树状结构参数\r\n                columns: [\r\n                    {\r\n                      label: '名称',\r\n                      prop: 'cat_name',\r\n                      width: '300px'\r\n                    },\r\n                    {\r\n                      label: '是否有效',\r\n                      type: 'template',\r\n                      template: 'valid'\r\n                    },\r\n                    {\r\n                      label: '排序',\r\n                      type: 'template',\r\n                      template: 'sort'\r\n                    },\r\n                    {\r\n                      label: '操作',\r\n                      type: 'template',\r\n                      template: 'operation'\r\n                    }\r\n                ],\r\n                //   联级选择器\r\n                //绑定用户选择的分类值\r\n                selectedKeys:[],\r\n                options: [],  //此为选择器需要获取的数据\r\n                cateNameList:[]  //选中选择器的分类值\r\n            }\r\n        },  \r\n        created() {\r\n            this.getCategoriesList()\r\n        },  \r\n        methods: {\r\n            addCateClose() {  //关闭对话框执行函数\r\n                // console.log(this.$refs.cateFormRef);\r\n                this.$refs.cateFormRef.resetFields()  \r\n                this.selectedKeys = [];\r\n            },\r\n            handleSizeChange(val) {\r\n                //   console.log(val);\r\n                this.queryInfo.pagesize = val\r\n                this.getCategoriesList()\r\n            },\r\n            handleCurrentChange(val) {\r\n                //   console.log(val);\r\n                this.queryInfo.pagenum = val\r\n                this.getCategoriesList()\r\n            },\r\n            async getCategoriesList() {\r\n                const { data: res } = await getCategoriesList_api(this.queryInfo)\r\n                if (res.meta.status != 200) return this.$message.error('获取用户数据列表失败')\r\n                this.$message.success('获取用户数据列表成功')\r\n                this.cateList = res.data.result\r\n                this.total = res.data.total\r\n                // console.log(res.data);\r\n            },\r\n            handleClose() {\r\n                //关闭对话框\r\n                this.CatedialogVisible = false\r\n            },\r\n            showCatedialogVisible() {\r\n                //显示对话框\r\n                this.showGetCategoriesList()\r\n                this.CatedialogVisible = true\r\n            },\r\n            handleChange(value) {  //获取选择器的值\r\n              //当选择器值改变时触发\r\n                this.cateNameList=value\r\n                //  console.log(value);\r\n            },\r\n            async showGetCategoriesList() {  //多级联动分类名称获取\r\n                const { data: res } = await getCategoriesList_api({type:2})\r\n                if (res.meta.status !== 200)\r\n                  return this.$message.error('获取用户数据列表失败')\r\n                this.$message.success('获取用户数据列表成功')\r\n                // console.log(res.data);\r\n                this.options=res.data\r\n            },\r\n            async addCateName(){  //提交添加分类\r\n                if(this.addCateForm.cateName==''&&this.addCateForm.cateName<2){\r\n                    return this.$message.error('请填写正确的分类名称')\r\n                } \r\n                // console.log(this.cateNameList)\r\n                // console.log(this.addCateForm.cateName)\r\n                const params={} //需要请求提交的数据对象\r\n                params.cat_name=this.addCateForm.cateName\r\n                if(this.cateNameList.length>0){    //二级分类or三级分类\r\n                    params.cat_pid=this.cateNameList[this.cateNameList.length-1]\r\n                    params.cat_level=this.cateNameList.length\r\n                }else if(this.cateNameList.length<=0){\r\n                    params.cat_pid=0\r\n                    params.cat_level=0\r\n                }\r\n                // console.log(params);\r\n                const {data:res}=await addCateName_api(params)\r\n                // console.log(res);\r\n                if (res.meta.status !== 201)\r\n                return this.$message.error('添加分类失败')\r\n                this.$message.success('添加分类成功')\r\n                this.getCategoriesList()\r\n                this.CatedialogVisible = false\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style lang='less' scoped>\r\n.search_button {\r\n  margin-bottom: 10px;\r\n}\r\n</style>"]}]}