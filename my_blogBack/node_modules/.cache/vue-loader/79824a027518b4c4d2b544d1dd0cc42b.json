{"remainingRequest":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\goods\\Add.vue?vue&type=style&index=0&id=8de88330&lang=less&scoped=true&","dependencies":[{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\goods\\Add.vue","mtime":1565523897648},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\less-loader\\dist\\cjs.js","mtime":1576755764101},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.el-step {\r\n  font-size: 13px;\r\n}\r\n.from .el-input {\r\n  width: 100%;\r\n}\r\n.imgVisible {\r\n    width: 100%;\r\n}\r\n",{"version":3,"sources":["Add.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Add.vue","sourceRoot":"src/components/goods","sourcesContent":["<!--  -->\r\n<template>\r\n  <div>\r\n    <Breadcrumb :value=\"common\"></Breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      <!-- 提示 -->\r\n      <el-alert title=\"添加商品信息\" type=\"info\" center show-icon :closable=\"false\"></el-alert>\r\n      <!-- 步骤条 -->\r\n      <el-steps :active=\"activeIndex-0\" align-center>\r\n        <el-step title=\"基本信息\"></el-step>\r\n        <el-step title=\"商品参数\"></el-step>\r\n        <el-step title=\"商品属性\"></el-step>\r\n        <el-step title=\"商品图片\"></el-step>\r\n        <el-step title=\"商品内容\"></el-step>\r\n        <el-step title=\"完成\"></el-step>\r\n      </el-steps>\r\n      <!-- tab栏切换 -->\r\n      <el-form\r\n        :model=\"addGoodsForm\"\r\n        status-icon\r\n        :rules=\"checkAddForm\"\r\n        ref=\"addGoodsFormref\"\r\n        label-width=\"100px\"\r\n        class=\"demo-addGoodsForm\"\r\n        :label-position=\"labelPosition\"\r\n      >\r\n        <el-tabs\r\n          :tab-position=\"tabPosition\"\r\n          v-model=\"activeIndex\"\r\n          :before-leave=\"beforeTabLeave\"\r\n          :stretch=\"true\"\r\n          @tab-click=\"getCateParams\"\r\n        >\r\n          <div style=\"margin: 20px;\"></div>\r\n          <!-- 多级分类信息 -->\r\n          <!-- 基本信息 -->\r\n          <el-tab-pane label=\"基本信息\" name=\"0\" class=\"from\">\r\n            <el-form-item label=\"商品名称\" prop=\"goods_name\">\r\n              <el-input v-model=\"addGoodsForm.goods_name\" autocomplete=\"off\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品价格\" prop=\"goods_price\">\r\n              <el-input\r\n                type=\"number\"\r\n                v-model=\"addGoodsForm.goods_price\"\r\n                autocomplete=\"off\"\r\n                clearable\r\n              ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品重量\" prop=\"goods_weight\">\r\n              <el-input type=\"number\" v-model=\"addGoodsForm.goods_weight\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品数量\" prop=\"goods_number\">\r\n              <el-input type=\"number\" v-model=\"addGoodsForm.goods_number\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品分类\">\r\n              <el-cascader\r\n                style=\"width:20%\"\r\n                clearable\r\n                v-model=\"selectedKeys\"\r\n                :options=\"options\"\r\n                :props=\"{ \r\n                            expandTrigger: 'hover',\r\n                            value:'cat_id',\r\n                            label:'cat_name',\r\n                              children:'children'\r\n                             }\"\r\n                @change=\"handleChange\"\r\n              ></el-cascader>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品参数 -->\r\n          <el-tab-pane label=\"商品参数\" name=\"1\">\r\n            <!-- 渲染表单item项 -->\r\n            <el-form-item :label=\"item.attr_name\" :key=\"item.attr_id\" v-for=\"item in manyParams\">\r\n              <!-- 使用数组渲染复选框组 -->\r\n              <el-checkbox-group v-model=\"item.attr_vals\">\r\n                <el-checkbox border :label=\"val\" v-for=\"(val,i) in item.attr_vals\" :key=\"i\"></el-checkbox>\r\n              </el-checkbox-group>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品属性 -->\r\n          <el-tab-pane label=\"商品属性\" name=\"2\">\r\n            <!-- 循环生成静态属性 -->\r\n            <el-form-item :label=\"item.attr_name\" v-for=\"(item,i) in onlyParams\" :key=\"i\">\r\n              <el-input v-model=\"item.attr_vals[0]\"></el-input>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品图片 -->\r\n          <el-tab-pane label=\"商品图片\" name=\"3\">\r\n            <el-upload\r\n              class=\"upload-demo\"\r\n              action=\"http://127.0.0.1:8888/api/private/v1/upload\"\r\n              :on-preview=\"handlePreview\"\r\n              :on-remove=\"handleRemove\"\r\n              :on-success=\"uploadSuccess\"\r\n              :file-list=\"fileList\"\r\n              list-type=\"picture\"\r\n              :headers=\"headerObj\"\r\n            >\r\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过500kb</div>\r\n            </el-upload>\r\n          </el-tab-pane>\r\n          <!-- 商品内容 -->\r\n          <el-tab-pane label=\"商品内容\" name=\"4\">\r\n            <!-- 富文本编辑器组件 -->\r\n            <quill-editor v-model=\"addGoodsForm.goods_introduce\"></quill-editor>\r\n            <!-- 添加商品按钮 -->\r\n            <el-button type=\"primary\" class=\"btnAdd\" @click=\"add\">添加商品</el-button>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-form>\r\n      <!-- 预览图片对话框 -->\r\n      <el-dialog title=\"提示\" :visible.sync=\"imgVisible\" width=\"30%\" >\r\n        <img :src=\"previewPath\" alt=\"\" class=\"imgVisible\">\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCategoriesList_api ,addGoods_api} from '@/api'\r\nimport { getCateParamsCommon } from '@/api/compute.js'\r\nimport { quillEditor } from 'vue-quill-editor'\r\n//导入vue-quill-editor的样式\r\nimport 'quill/dist/quill.core.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport 'quill/dist/quill.bubble.css'\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n  components: {\r\n    quillEditor\r\n  },\r\n  data() {\r\n    return {\r\n      common: ['商品管理', '添加商品'], //公共组件传值\r\n      activeIndex: 0, //步骤进度序列号\r\n      tabPosition: 'left', //tab栏显示方向\r\n      // 基本信息value\r\n      addGoodsForm: {\r\n        goods_name: '',\r\n        goods_price: 0,\r\n        goods_weight: 0,\r\n        goods_number: 0,\r\n        goods_cat: [],\r\n        //上传图片数组\r\n        pics: [],\r\n        attrs: [],\r\n        goods_introduce: ''\r\n      },\r\n      selectedKeys: [], //分类选择数组  \r\n      options: [], //分类渲染参数\r\n      labelPosition: 'top',\r\n      //   表单验证\r\n      checkAddForm: {\r\n        goods_name: [\r\n          { required: true, message: '请输入参数名称', trigger: 'blur' },\r\n          { min: 2, max: 8, message: '长度在 2 到 8 个字符', trigger: 'blur' }\r\n        ],\r\n        goods_price: [\r\n          { required: true, message: '请输入商品价格', trigger: 'blur' }\r\n        ],\r\n        goods_weight: [\r\n          { required: true, message: '请输入商品重量', trigger: 'blur' }\r\n        ],\r\n        goods_number: [\r\n          { required: true, message: '请输入商品数量', trigger: 'blur' }\r\n        ]\r\n      },\r\n      //   获取参数属性的传参\r\n      goodsParams: {\r\n        id: '',\r\n        sel: ''\r\n      },\r\n      onlyParams: [], //获取静态参数\r\n      manyParams: [], //获取动态参数\r\n      fileList: [], //上传的文件列表\r\n      //图片上传组件的headers请求头对象\r\n      headerObj: { Authorization: window.sessionStorage.getItem('token') },\r\n      imgVisible:false,//图片对话框\r\n      previewPath:'',//图片预览地址\r\n    }\r\n  },\r\n  methods: {\r\n    //tab栏切换触发\r\n    handleClick(tab, event) {},\r\n    //tab栏判断，不满足就不切换\r\n    beforeTabLeave(activeName, oldActiveName) {\r\n      // 判断变量\r\n      var res = true\r\n      if (oldActiveName == '0') {\r\n        this.$refs.addGoodsFormref.validate(result => {\r\n        //   console.log(result, 666)\r\n          if (!result) {\r\n            res = false\r\n          }\r\n        })\r\n        if (this.selectedKeys.length < 3) {\r\n          res = false\r\n          this.$message.error('请选择商品分类列表')\r\n        }\r\n      }\r\n      return res\r\n    },\r\n    // 分类选择器change事件\r\n    handleChange() {\r\n      this.addGoodsForm.goods_cat = this.selectedKeys\r\n    },\r\n    //获取分类信息\r\n    async getGoodsCateList() {\r\n      const { data: res } = await getCategoriesList_api()\r\n      //   console.log(res)\r\n      if (res.meta.status !== 200)\r\n        return this.$message.error('获取商品分类列表失败')\r\n      this.$message.success('获取商品分类列表成功')\r\n      this.options = res.data\r\n    },\r\n    // 获取商品参数/商品属性\r\n    getCateParams() {\r\n      // console.log(this.activeIndex);\r\n      if (this.activeIndex == 1) {\r\n        this.goodsParams.sel = 'many'\r\n        this.goodsParams.id = this.selectedKeys[this.selectedKeys.length - 1]\r\n      } else if (this.activeIndex == 2) {\r\n        this.goodsParams.sel = 'only'\r\n        this.goodsParams.id = this.selectedKeys[this.selectedKeys.length - 1]\r\n      }\r\n      if (this.activeIndex == 1 || this.activeIndex == 2) {\r\n        getCateParamsCommon(this.goodsParams).then(res => {\r\n          if (res.meta.status !== 200)\r\n            return this.$message.error('获取参数属性失败')\r\n          this.$message.success('获取参数属性成功')\r\n          res.data.forEach(item => {\r\n            item.attr_vals.length > 0\r\n              ? (item.attr_vals = item.attr_vals.split(','))\r\n              : (item.attr_vals = [])\r\n          })\r\n          this.goodsParams.sel == 'many'\r\n            ? (this.manyParams = res.data)\r\n            : (this.onlyParams = res.data)\r\n        //   console.log(this.manyParams)\r\n        //   console.log(this.onlyParams)\r\n        })\r\n      }\r\n    },\r\n    // 点击图片叉号触发的函数\r\n    handleRemove(file) {\r\n    //   console.log(file)\r\n      const filePath = file.response.data.tmp_path\r\n      const index = this.addGoodsForm.pics.findIndex(\r\n        item => item.pic === filePath\r\n      )\r\n      //   移除数组图片指定项\r\n      this.addGoodsForm.pics.splice(index, 1)\r\n    },\r\n    // 点击图片触发的函数\r\n    handlePreview(file, fileList) {\r\n        this.previewPath = file.response.data.url\r\n        this.imgVisible=true;\r\n    },\r\n    // 上传图片成功执行函数\r\n    uploadSuccess(response, file, fileList) {\r\n      console.log(response, file, fileList)\r\n      if (response.meta.status !== 200)\r\n        return this.$message.error('上传图片失败')\r\n      this.$message.success('上传图片成功')\r\n      this.addGoodsForm.pics.push({ pic: response.data.tmp_path })\r\n    },\r\n    // 添加商品提交\r\n    async add() {\r\n        this.$refs.addGoodsFormref.validate(async valid=>{\r\n            if(!valid) return this.$message.error('请填写完整的信息')\r\n            const form=_.cloneDeep(this.addGoodsForm)\r\n            form.goods_cat=form.goods_cat.join(',')\r\n            // 将动态参数添加进去\r\n            // console.log(this.manyParams);\r\n            this.manyParams.forEach(item=>{\r\n                form.attrs.push({attr_id:item.attr_id,attr_value:item.attr_vals.join(\" \")})\r\n            })\r\n            // 将静态参数添加进去\r\n            // console.log(this.onlyParams);\r\n            this.onlyParams.forEach(item=>{\r\n                form.attrs.push({attr_id:item.attr_id,attr_value:item.attr_vals[0]})\r\n            })\r\n            const{data:res}=await addGoods_api(form)\r\n            if(res.meta.status!==201) return this.$message.error('添加商品失败')\r\n            this.$message.success('添加商品成功')\r\n            // 跳转到商品列表\r\n            this.$router.push('/goods')\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.getGoodsCateList()\r\n  },\r\n  computed: {}\r\n}\r\n</script>\r\n<style lang='less' scoped>\r\n.el-step {\r\n  font-size: 13px;\r\n}\r\n.from .el-input {\r\n  width: 100%;\r\n}\r\n.imgVisible {\r\n    width: 100%;\r\n}\r\n</style>"]}]}