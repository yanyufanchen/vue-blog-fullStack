{"remainingRequest":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\jurisdiction\\Roles.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\jurisdiction\\Roles.vue","mtime":1565531660786},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getRoles_api, deleteRoles_api, gitRights_api, amendRolesRights_api } from '@/api'\r\nexport default {\r\ndata() {\r\n    return {\r\n      roleList: [],\r\n      dataList: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'authName'\r\n\t  },\r\n\t  rightsDialogVisible:false,\r\n\t  difKeys:[],\r\n\t  rolesId:''  //当前角色id\r\n    }\r\n},\r\nmethods: {\r\n    async getRolesList() {\r\n      //获取角色列表\r\n      const { data: res } = await getRoles_api()\r\n      //如果返回状态为异常状态则报错并返回\r\n      // if (res.meta.status !== 200)\r\n      //     return this.$message.error('获取角色列表失败')\r\n      // //如果返回状态正常，将请求的数据保存在data中\r\n      // this.roleList = res.data\r\n      //   console.log(res.data)\r\n      this.roleList = res.data\r\n    },\r\n    async deleteRoles(role, rightsId) { //删除权限\r\n        // 弹框提示用户是否要删除\r\n        const confirmResult = await this.$confirm(\r\n        '此操作将永久删除该文件, 是否继续?',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).catch(err => err)\r\n\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('取消了删除！')\r\n      }\r\n\r\n      const { data: res } = await deleteRoles_api({\r\n        rolesId: role.id,\r\n        rightsId: rightsId\r\n      })\r\n      // console.log(res);\r\n      if (res.meta.status !== 200) return this.$message.error('删除权限失败')\r\n      role.children = res.data\r\n    },\r\n    async showSetRightDialog(role) {  //展示权限\r\n\t\t  this.difKeys=[]\r\n\t\t//   console.log(role.id);\r\n\t\tthis.rolesId=role.id\r\n        //分配权限\r\n        // console.log(role);\r\n        // 获取到role 当前角色信息\r\n        // 请求后台 获取所有权限tree\r\n        const { data: res } = await gitRights_api('tree')\r\n\t    // console.log(res.data);\r\n\t    this.dataList=res.data\r\n\t    // 然后将所有的权限可视化渲染\r\n\t    this.getDefKey(role,this.difKeys)\r\n\t\t  // console.log(this.difKeys);\r\n\t\t  this.rightsDialogVisible=true\r\n        // 通过递归将当前角色的信息显示在结构中\r\n\t},\r\n\tgetDefKey(node,arr){    //递归遍历当前角色所有的权限id\r\n\t\tif(!node.children){\r\n\t\t\treturn arr.push(node.id)\r\n\t\t}\r\n\t\tnode.children.forEach(item => {\r\n\t\t\tthis.getDefKey(item,arr)\r\n\t\t});\r\n\t},\r\n    async allotRights(){\r\n\t\t// console.log(this.$refs.treeRef.getCheckedKeys());\r\n\t\t// console.log(this.$refs.treeRef.getHalfCheckedKeys());\r\n\t\t// 获取选中后的所有权限\r\n\t\tconst keys=[...this.$refs.treeRef.getCheckedKeys(),...this.$refs.treeRef.getHalfCheckedKeys()]\r\n\t\t// console.log(keys);\r\n\t\t// 将权限数组转化为字符串\r\n\t\tconst isStr=keys.join(',')  \r\n\t\t// console.log(isStr);\r\n\t\t// console.log(this.rolesId);\r\n\t\tconst {data:res}=await amendRolesRights_api(this.rolesId,isStr)\r\n\t\t// console.log(res);\r\n\t}\r\n},\r\ncreated() {\r\n    this.getRolesList()\r\n\t}\r\n}\r\n",{"version":3,"sources":["Roles.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Roles.vue","sourceRoot":"src/components/jurisdiction","sourcesContent":["<template>\r\n  <div>\r\n    <el-breadcrumb separator=\"/\">\r\n      <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      <!-- 添加角色按钮区域 -->\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\">添加角色</el-button>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 角色列表区域 -->\r\n      <!-- row-key=\"id\" 是2019年3月提供的新特性，if there's nested data, rowKey is required.如果这是一个嵌套的数据，rowkey 是必须添加的属性-->\r\n      <el-table :data=\"roleList\" border>\r\n        <!-- 添加展开列 -->\r\n        <el-table-column type=\"expand\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 第一级 -->\r\n            <el-row\r\n              v-for=\"(item1 , index1) in scope.row.children\"\r\n              :key=\"index1\"\r\n              row-key=\"id\"\r\n              :class=\"['bdbottom',index1==0? 'bdtop':'']\"\r\n            >\r\n              <el-col :span=\"5\">\r\n                <el-tag \r\n\t\t\t\t@close=\"deleteRoles(scope.row,item1.id)\"\r\n\t\t\t\tclosable>{{item1.authName}}</el-tag>\r\n                <i class=\"el-icon-caret-right\"></i>\r\n              </el-col>\r\n              <!-- 第二级 -->\r\n              <el-col :span=\"19\">\r\n                <el-row\r\n                  v-for=\"(item2,index2) in item1.children\"\r\n                  :key=\"index2\"\r\n                  :class=\"index2==0? 'center' :'bdtop'\"\r\n                >\r\n                  <el-col :span=\"6\">\r\n                    <el-tag \r\n\t\t\t\t\t@close=\"deleteRoles(scope.row,item2.id)\" \r\n\t\t\t\t\ttype=\"success\" closable>{{item2.authName}}</el-tag>\r\n                    <i class=\"el-icon-caret-right\"></i>\r\n                  </el-col>\r\n                  <!-- 第三级 -->\r\n                  <el-col :span=\"18\">\r\n                    <el-tag\r\n                      @close=\"deleteRoles(scope.row,item3.id)\"\r\n                      type=\"warning\"\r\n                      closable\r\n                      v-for=\"(item3,index3) in item2.children \"\r\n                      :key=\"index3\"\r\n                      class=\"margin\"\r\n                    >{{item3.authName}}</el-tag>\r\n                  </el-col>\r\n                </el-row>\r\n              </el-col>\r\n            </el-row>\r\n\r\n            <!-- <pre>\r\n            {{scope.row}}\r\n            </pre>-->\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column type=\"index\"></el-table-column>\r\n        <el-table-column label=\"角色名称\" prop=\"roleName\"></el-table-column>\r\n        <el-table-column label=\"角色描述\" prop=\"roleDesc\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"300px\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\">删除</el-button>\r\n            <el-button\r\n              @click=\"showSetRightDialog(scope.row)\"\r\n              size=\"mini\"\r\n              type=\"warning\"\r\n              icon=\"el-icon-setting\"\r\n            >分配权限</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 添加权限分配弹框 -->\r\n      <el-dialog title=\"权限分配\" :visible.sync=\"rightsDialogVisible\" width=\"50%\" >\r\n        <!-- 树形结构 -->\r\n        <el-tree \r\n\t\tdefault-expand-all \r\n\t\t:data=\"dataList\" \r\n\t\t:props=\"defaultProps\" \r\n\t\tshow-checkbox \r\n\t\tnode-key=\"id\"\r\n\t\t:default-checked-keys=\"difKeys\"\r\n\t\tref=\"treeRef\"\r\n\t\t>\r\n        </el-tree>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"rightsDialogVisible = false\" >取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getRoles_api, deleteRoles_api, gitRights_api, amendRolesRights_api } from '@/api'\r\nexport default {\r\ndata() {\r\n    return {\r\n      roleList: [],\r\n      dataList: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'authName'\r\n\t  },\r\n\t  rightsDialogVisible:false,\r\n\t  difKeys:[],\r\n\t  rolesId:''  //当前角色id\r\n    }\r\n},\r\nmethods: {\r\n    async getRolesList() {\r\n      //获取角色列表\r\n      const { data: res } = await getRoles_api()\r\n      //如果返回状态为异常状态则报错并返回\r\n      // if (res.meta.status !== 200)\r\n      //     return this.$message.error('获取角色列表失败')\r\n      // //如果返回状态正常，将请求的数据保存在data中\r\n      // this.roleList = res.data\r\n      //   console.log(res.data)\r\n      this.roleList = res.data\r\n    },\r\n    async deleteRoles(role, rightsId) { //删除权限\r\n        // 弹框提示用户是否要删除\r\n        const confirmResult = await this.$confirm(\r\n        '此操作将永久删除该文件, 是否继续?',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).catch(err => err)\r\n\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('取消了删除！')\r\n      }\r\n\r\n      const { data: res } = await deleteRoles_api({\r\n        rolesId: role.id,\r\n        rightsId: rightsId\r\n      })\r\n      // console.log(res);\r\n      if (res.meta.status !== 200) return this.$message.error('删除权限失败')\r\n      role.children = res.data\r\n    },\r\n    async showSetRightDialog(role) {  //展示权限\r\n\t\t  this.difKeys=[]\r\n\t\t//   console.log(role.id);\r\n\t\tthis.rolesId=role.id\r\n        //分配权限\r\n        // console.log(role);\r\n        // 获取到role 当前角色信息\r\n        // 请求后台 获取所有权限tree\r\n        const { data: res } = await gitRights_api('tree')\r\n\t    // console.log(res.data);\r\n\t    this.dataList=res.data\r\n\t    // 然后将所有的权限可视化渲染\r\n\t    this.getDefKey(role,this.difKeys)\r\n\t\t  // console.log(this.difKeys);\r\n\t\t  this.rightsDialogVisible=true\r\n        // 通过递归将当前角色的信息显示在结构中\r\n\t},\r\n\tgetDefKey(node,arr){    //递归遍历当前角色所有的权限id\r\n\t\tif(!node.children){\r\n\t\t\treturn arr.push(node.id)\r\n\t\t}\r\n\t\tnode.children.forEach(item => {\r\n\t\t\tthis.getDefKey(item,arr)\r\n\t\t});\r\n\t},\r\n    async allotRights(){\r\n\t\t// console.log(this.$refs.treeRef.getCheckedKeys());\r\n\t\t// console.log(this.$refs.treeRef.getHalfCheckedKeys());\r\n\t\t// 获取选中后的所有权限\r\n\t\tconst keys=[...this.$refs.treeRef.getCheckedKeys(),...this.$refs.treeRef.getHalfCheckedKeys()]\r\n\t\t// console.log(keys);\r\n\t\t// 将权限数组转化为字符串\r\n\t\tconst isStr=keys.join(',')  \r\n\t\t// console.log(isStr);\r\n\t\t// console.log(this.rolesId);\r\n\t\tconst {data:res}=await amendRolesRights_api(this.rolesId,isStr)\r\n\t\t// console.log(res);\r\n\t}\r\n},\r\ncreated() {\r\n    this.getRolesList()\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.box-card {\r\n  width: 100%;\r\n}\r\n.bdbottom {\r\n  padding: 7px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n.bdtop {\r\n  padding: 7px;\r\n  border-top: 1px solid #eee;\r\n}\r\n.center {\r\n  padding: 7px;\r\n}\r\n.margin {\r\n  margin: 5px;\r\n}\r\n</style>\r\n\r\n"]}]}