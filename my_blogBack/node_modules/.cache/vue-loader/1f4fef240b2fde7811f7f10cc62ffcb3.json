{"remainingRequest":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\reports\\Reports.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\reports\\Reports.vue","mtime":1565768699810},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport echarts from 'echarts'\r\nimport {reports_api} from '@/api'\r\n//导入lodash\r\nimport _ from 'lodash'\r\nexport default {\r\n  data() {\r\n    return {\r\n      common: ['数据统计', '数据报表'] ,//公共组件传值\r\n       options: {\r\n        title: {\r\n          text: '用户来源'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#E9EEF3'\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            boundaryGap: false\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {},\r\n  async mounted(){\r\n      // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById('main'));\r\n        const {data:res}=await reports_api()\r\n        console.log(res,111);\r\n         if (res.meta.status !== 200) {\r\n      return this.$message.error('获取折线图数据失败')\r\n    }\r\n    //合并res.data和this.options\r\n    //合并res.data和this.options\r\n    const result = _.merge(res.data,this.options)\r\n    // this.options={...res.data}\r\n         // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(res.data);\r\n  }\r\n}\r\n",{"version":3,"sources":["Reports.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reports.vue","sourceRoot":"src/components/reports","sourcesContent":["<!--  -->\r\n<template>\r\n  <div>\r\n    <Breadcrumb :value=\"common\"></Breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      <!-- 为 ECharts 准备一个具备大小（宽高）的 DOM -->\r\n      <div id=\"main\" style=\"width: 750px;height:400px;\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport echarts from 'echarts'\r\nimport {reports_api} from '@/api'\r\n//导入lodash\r\nimport _ from 'lodash'\r\nexport default {\r\n  data() {\r\n    return {\r\n      common: ['数据统计', '数据报表'] ,//公共组件传值\r\n       options: {\r\n        title: {\r\n          text: '用户来源'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#E9EEF3'\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            boundaryGap: false\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {},\r\n  async mounted(){\r\n      // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById('main'));\r\n        const {data:res}=await reports_api()\r\n        console.log(res,111);\r\n         if (res.meta.status !== 200) {\r\n      return this.$message.error('获取折线图数据失败')\r\n    }\r\n    //合并res.data和this.options\r\n    //合并res.data和this.options\r\n    const result = _.merge(res.data,this.options)\r\n    // this.options={...res.data}\r\n         // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(res.data);\r\n  }\r\n}\r\n</script>\r\n<style lang='less' scoped>\r\n</style>"]}]}