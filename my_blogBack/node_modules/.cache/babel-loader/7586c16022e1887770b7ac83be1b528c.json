{"remainingRequest":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\babel-loader\\lib\\index.js!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\reports\\Reports.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\reports\\Reports.vue","mtime":1565768699810},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\\\u6587\\u6863\\\\item\\\\\\u8BFE\\u7A0B\\\\\\u5C31\\u4E1A\\u73ED\\\\day60-vuejs\\\\\\u7535\\u5546\\u9879\\u76EE\\\\3.\\u9879\\u76EE\\u5B9E\\u6218day1\\\\\\u7D20\\u6750\\\\my_shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nimport { reports_api } from '@/api'; //导入lodash\n\nimport _ from 'lodash';\nexport default {\n  data: function data() {\n    return {\n      common: ['数据统计', '数据报表'],\n      //公共组件传值\n      options: {\n        title: {\n          text: '用户来源'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#E9EEF3'\n            }\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          boundaryGap: false\n        }],\n        yAxis: [{\n          type: 'value'\n        }]\n      }\n    };\n  },\n  methods: {},\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var myChart, _ref, res, result;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // 基于准备好的dom，初始化echarts实例\n              myChart = echarts.init(document.getElementById('main'));\n              _context.next = 3;\n              return reports_api();\n\n            case 3:\n              _ref = _context.sent;\n              res = _ref.data;\n              console.log(res, 111);\n\n              if (!(res.meta.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", this.$message.error('获取折线图数据失败'));\n\n            case 8:\n              //合并res.data和this.options\n              //合并res.data和this.options\n              result = _.merge(res.data, this.options); // this.options={...res.data}\n              // 使用刚指定的配置项和数据显示图表。\n\n              myChart.setOption(res.data);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["Reports.vue"],"names":[],"mappings":";;;;;;;;;;;;AAWA,OAAA,OAAA,MAAA,SAAA;AACA,SAAA,WAAA,QAAA,OAAA,C,CACA;;AACA,OAAA,CAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AACA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAIA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,WAAA,EAAA;AACA,YAAA,IAAA,EAAA,OADA;AAEA,YAAA,KAAA,EAAA;AACA,cAAA,eAAA,EAAA;AADA;AAFA;AAFA,SAJA;AAaA,QAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,YAAA,EAAA;AAJA,SAbA;AAmBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,WAAA,EAAA;AADA,SADA,CAnBA;AAwBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAxBA;AAFA,KAAA;AAiCA,GAnCA;AAoCA,EAAA,OAAA,EAAA,EApCA;AAqCA,EAAA,OArCA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAsCA;AACA,cAAA,OAvCA,GAuCA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAvCA;AAAA;AAAA,qBAwCA,WAAA,EAxCA;;AAAA;AAAA;AAwCA,cAAA,GAxCA,QAwCA,IAxCA;AAyCA,cAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,GAAA;;AAzCA,oBA0CA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GA1CA;AAAA;AAAA;AAAA;;AAAA,+CA2CA,KAAA,QAAA,CAAA,KAAA,CAAA,WAAA,CA3CA;;AAAA;AA6CA;AACA;AACA,cAAA,MA/CA,GA+CA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,OAAA,CA/CA,EAgDA;AACA;;AACA,cAAA,OAAA,CAAA,SAAA,CAAA,GAAA,CAAA,IAAA;;AAlDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<!--  -->\r\n<template>\r\n  <div>\r\n    <Breadcrumb :value=\"common\"></Breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      <!-- 为 ECharts 准备一个具备大小（宽高）的 DOM -->\r\n      <div id=\"main\" style=\"width: 750px;height:400px;\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport echarts from 'echarts'\r\nimport {reports_api} from '@/api'\r\n//导入lodash\r\nimport _ from 'lodash'\r\nexport default {\r\n  data() {\r\n    return {\r\n      common: ['数据统计', '数据报表'] ,//公共组件传值\r\n       options: {\r\n        title: {\r\n          text: '用户来源'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#E9EEF3'\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            boundaryGap: false\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {},\r\n  async mounted(){\r\n      // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById('main'));\r\n        const {data:res}=await reports_api()\r\n        console.log(res,111);\r\n         if (res.meta.status !== 200) {\r\n      return this.$message.error('获取折线图数据失败')\r\n    }\r\n    //合并res.data和this.options\r\n    //合并res.data和this.options\r\n    const result = _.merge(res.data,this.options)\r\n    // this.options={...res.data}\r\n         // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(res.data);\r\n  }\r\n}\r\n</script>\r\n<style lang='less' scoped>\r\n</style>"],"sourceRoot":"src/components/reports"}]}