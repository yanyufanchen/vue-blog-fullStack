{"remainingRequest":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\babel-loader\\lib\\index.js!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\orders\\Orders.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\orders\\Orders.vue","mtime":1565521202776},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\\\u6587\\u6863\\\\item\\\\\\u8BFE\\u7A0B\\\\\\u5C31\\u4E1A\\u73ED\\\\day60-vuejs\\\\\\u7535\\u5546\\u9879\\u76EE\\\\3.\\u9879\\u76EE\\u5B9E\\u6218day1\\\\\\u7D20\\u6750\\\\my_shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ordersList_api, ordersPany_api } from '@/api';\nimport cityData from \"./citydata\";\nexport default {\n  data: function data() {\n    return {\n      common: ['订单管理', '订单列表'],\n      //公共组件传值\n      orderfrom: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      //   表单数据\n      tableData: [],\n      total: 0,\n      //   修改地址\n      //   selectedKeys: [],\n      sideVisible: false,\n      options: cityData,\n      addressForm: {\n        selectedKeys: [],\n        side: ''\n      },\n      //   验证地址栏对话框\n      addressFormRules: {\n        side: [{\n          required: true,\n          message: '地址不能为空'\n        }]\n      },\n      //   物流对话框\n      ordersVisible: false,\n      reverse: true,\n      activities: []\n    };\n  },\n  created: function created() {\n    this.getordersList();\n  },\n  methods: {\n    getordersList: function () {\n      var _getordersList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return ordersList_api(this.orderfrom);\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取订单列表失败'));\n\n              case 6:\n                this.$message.success('获取订单列表成功');\n                this.tableData = res.data.goods;\n                this.total = res.data.total;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getordersList() {\n        return _getordersList.apply(this, arguments);\n      }\n\n      return getordersList;\n    }(),\n    handleSizeChange: function handleSizeChange(val) {\n      this.orderfrom.pagesize = val;\n      this.getordersList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.orderfrom.pagenum = val;\n      this.getordersList();\n    },\n    // 点击打开修改地址对话框\n    openSide: function openSide() {\n      this.sideVisible = true;\n    },\n    // 地址对话框选中地址后\n    handleChange: function handleChange(val) {\n      // console.log(val);\n      this.addressForm.side = val.join('');\n    },\n    // 重置对话框\n    emptyAddress: function emptyAddress() {\n      this.addressForm.selectedKeys = [];\n      this.$refs.OrderSideFormRef.resetFields();\n    },\n    // 关闭地址对话框\n    addressClose: function addressClose() {\n      this.addressForm.selectedKeys = [];\n      this.$refs.OrderSideFormRef.resetFields();\n      this.sideVisible = false;\n    },\n    // 点击打开物流信息对话框\n    openOrders: function () {\n      var _openOrders = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _ref2, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return ordersPany_api();\n\n              case 2:\n                _ref2 = _context2.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status != 200)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('获取物流信息失败'));\n\n              case 6:\n                this.$message.success('获取物流信息成功');\n                console.log(res.data);\n                this.activities = res.data;\n                this.ordersVisible = true;\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function openOrders() {\n        return _openOrders.apply(this, arguments);\n      }\n\n      return openOrders;\n    }()\n  }\n};",{"version":3,"sources":["Orders.vue"],"names":[],"mappings":"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","sourcesContent":["<!--  -->\r\n<template>\r\n  <div>\r\n    <Breadcrumb :value=\"common\"></Breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      <el-table :data=\"tableData\" stripe style=\"width: 100%\" border>\r\n        <el-table-column type=\"index\" label=\"#\" width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"order_number\" label=\"订单编号\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"order_price\" label=\"订单价格\"></el-table-column>\r\n        <el-table-column prop=\"order_pay\" label=\"是否付款\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag type=\"danger\" v-if=\"scope.row.order_pay==='0'\">未付款</el-tag>\r\n            <el-tag type=\"success\" v-else>已付款</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"is_send\" label=\"是否发货\"></el-table-column>\r\n        <el-table-column prop=\"create_time\" label=\"下单时间\">\r\n          <template slot-scope=\"scope\">{{scope.row.update_time | moment}}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"address\" label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 修改按钮 -->\r\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"openSide\"></el-button>\r\n            <!-- 物流按钮 -->\r\n            <el-button type=\"success\" icon=\"el-icon-s-promotion\" size=\"mini\" @click=\"openOrders\"></el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- //分页 -->\r\n      <el-pagination\r\n        background\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"orderfrom.pagenum\"\r\n        :page-sizes=\"[2, 5, 10, 20]\"\r\n        :page-size=\"orderfrom.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      ></el-pagination>\r\n    </el-card>\r\n    <!-- 修改地址对话框 -->\r\n    <el-dialog title=\"修改地址\" :visible.sync=\"sideVisible\" width=\"50%\" :before-close=\"addressClose\">\r\n      <el-form ref=\"OrderSideFormRef\" label-width=\"110px\" :model=\"addressForm\" :rules=\"addressFormRules\">\r\n        <!-- 多级分类信息 -->\r\n        <el-form-item label=\"选择商品分类：\">\r\n          <el-cascader\r\n            style=\"width:20%\"\r\n            clearable\r\n            v-model=\"addressForm.selectedKeys\"\r\n            :options=\"options\"\r\n            :props=\"{ \r\n              expandTrigger: 'hover',\r\n              value:'value',\r\n              label:'label',\r\n                children:'children'\r\n               }\"\r\n            @change=\"handleChange\"\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item\r\n          label=\"收货地址:\"\r\n          prop=\"side\"\r\n        >\r\n          <el-input  v-model=\"addressForm.side\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" >提交</el-button>\r\n          <el-button @click=\"emptyAddress\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n    <!-- 物流对话框 -->\r\n    <el-dialog title=\"物流进度\" :visible.sync=\"ordersVisible\" width=\"50%\">\r\n      <el-timeline :reverse=\"reverse\">\r\n        <el-timeline-item\r\n          v-for=\"(activity, index) in activities\"\r\n          :key=\"index\"\r\n          :timestamp=\"activity.time\"\r\n        >{{activity.context}}</el-timeline-item>\r\n      </el-timeline>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { ordersList_api, ordersPany_api } from '@/api'\r\nimport cityData from './citydata'\r\nexport default {\r\n  data() {\r\n    return {\r\n      common: ['订单管理', '订单列表'], //公共组件传值\r\n      orderfrom: {\r\n        query: '',\r\n        pagenum: 1,\r\n        pagesize: 10\r\n      },\r\n      //   表单数据\r\n      tableData: [],\r\n      total: 0,\r\n      //   修改地址\r\n    //   selectedKeys: [],\r\n      sideVisible: false,\r\n      options: cityData,\r\n      addressForm:{\r\n          selectedKeys:[],\r\n          side:''\r\n      },\r\n    //   验证地址栏对话框\r\n      addressFormRules:{\r\n          side: [{ required: true, message: '地址不能为空' }]\r\n      },\r\n      //   物流对话框\r\n      ordersVisible: false,\r\n      reverse: true,\r\n      activities: []\r\n    }\r\n  },\r\n  created() {\r\n    this.getordersList()\r\n  },\r\n  methods: {\r\n    async getordersList() {\r\n      const { data: res } = await ordersList_api(this.orderfrom)\r\n      if (res.meta.status !== 200) return this.$message.error('获取订单列表失败')\r\n      this.$message.success('获取订单列表成功')\r\n      this.tableData = res.data.goods\r\n      this.total = res.data.total\r\n    },\r\n    handleSizeChange(val) {\r\n      this.orderfrom.pagesize = val\r\n      this.getordersList()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.orderfrom.pagenum = val\r\n      this.getordersList()\r\n    },\r\n    // 点击打开修改地址对话框\r\n    openSide() {\r\n      this.sideVisible = true\r\n    },\r\n    // 地址对话框选中地址后\r\n    handleChange(val) {\r\n        // console.log(val);\r\n        this.addressForm.side=val.join('')\r\n    },\r\n    // 重置对话框\r\n    emptyAddress(){\r\n       this.addressForm.selectedKeys=[]\r\n        this.$refs.OrderSideFormRef.resetFields()\r\n    },\r\n    // 关闭地址对话框\r\n    addressClose(){\r\n        this.addressForm.selectedKeys=[]\r\n        this.$refs.OrderSideFormRef.resetFields()\r\n        this.sideVisible = false\r\n    },\r\n    // 点击打开物流信息对话框\r\n    async openOrders() {\r\n      const { data: res } = await ordersPany_api()\r\n      // console.log(res);\r\n      if (res.meta.status != 200) return this.$message.error('获取物流信息失败')\r\n      this.$message.success('获取物流信息成功')\r\n      console.log(res.data)\r\n      this.activities = res.data\r\n      this.ordersVisible = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang='less' scoped>\r\n.el-cascader {\r\n  width: 100% !important;\r\n}\r\n</style>"],"sourceRoot":"src/components/orders"}]}