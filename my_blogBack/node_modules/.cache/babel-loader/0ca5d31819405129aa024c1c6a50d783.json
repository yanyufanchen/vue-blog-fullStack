{"remainingRequest":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\babel-loader\\lib\\index.js!D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\src\\components\\Login.vue","mtime":1590677701127},{"path":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\\\u5F00\\u53D1\\\\\\u4E2A\\u4EBA\\u670D\\u52A1\\u5668\\\\pengwang.xyz\\\\my_blogBack\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { login_api } from \"@/api\";\nexport default {\n  data: function data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      // 表单验证规则\n      loginFormRules: {\n        // 验证用户名\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '3 to 20 characters in length',\n          trigger: 'blur'\n        }],\n        // 验证密码\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 6,\n          message: '3 to 6 characters in length',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    var lett = this;\n\n    document.onkeydown = function (e) {\n      var key = window.event.keyCode;\n      console.log(key, e);\n\n      if (key == 13) {\n        lett.login();\n      }\n    };\n  },\n  methods: {\n    reset: function reset() {\n      this.$refs.loginFormRef.resetFields();\n    },\n    login: function login() {\n      var _this = this;\n\n      this.$refs.loginFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(valid) {\n          var _ref2, res;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (valid) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", _this.$message.error('输入错误'));\n\n                case 2:\n                  _context.next = 4;\n                  return login_api(_this.loginForm);\n\n                case 4:\n                  _ref2 = _context.sent;\n                  res = _ref2.data;\n\n                  if (!(res.statu !== 200)) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", _this.$message.error(res.mes ? res.mes : 'Login failed'));\n\n                case 8:\n                  _this.$message.success(res.mes ? res.mes : '登录成功'); // 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\n                  //   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\n                  //   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\n\n\n                  window.sessionStorage.setItem('token', res.data.token); // 跳转到index页面\n\n                  _this.$router.push('/admin/index');\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,SAAA,SAAA,QAAA,OAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA,OADA;AAKA;AACA,MAAA,cAAA,EAAA;AACA;AACA,QAAA,QAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,OAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,8BAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,CAFA;AAGA;AACA,QAAA,QAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,OAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,OAAA,EAAA,6BAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AAJA;AANA,KAAA;AAaA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,QAAA,IAAA,GAAA,IAAA;;AACA,IAAA,QAAA,CAAA,SAAA,GAAA,UAAA,CAAA,EAAA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,CAAA;;AAEA,UAAA,GAAA,IAAA,EAAA,EAAA;AACA,QAAA,IAAA,CAAA,KAAA;AACA;AACA,KAPA;AAQA,GA1BA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,WAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AAAA;;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAA,iBAAA,KAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,KADA;AAAA;AAAA;AAAA;;AAAA,mDACA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CADA;;AAAA;AAAA;AAAA,yBAEA,SAAA,CAAA,KAAA,CAAA,SAAA,CAFA;;AAAA;AAAA;AAEA,kBAAA,GAFA,SAEA,IAFA;;AAAA,wBAGA,GAAA,CAAA,KAAA,KAAA,GAHA;AAAA;AAAA;AAAA;;AAAA,mDAGA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA,GAAA,cAAA,CAHA;;AAAA;AAIA,kBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA,GAAA,MAAA,EAJA,CAKA;AACA;AACA;;;AACA,kBAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,OAAA,EAAA,GAAA,CAAA,IAAA,CAAA,KAAA,EARA,CASA;;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,cAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA;;AAAA;AAAA;AAAA;AAAA;AAYA;AAjBA;AA3BA,CAAA","sourcesContent":["<template>\r\n  <div class=\"component_login\">\r\n    <div class=\"login_box\">\r\n      <div class=\"left_img\">\r\n        <img src=\"../assets/login2.png\"\r\n             alt=\"\"\r\n             style=\"width:100%;height:100%\">\r\n      </div>\r\n      <!-- 头像 -->\r\n      <!-- <div class=\"avatar_box\">\r\n        <img src=\"../assets/logo.png\" alt />\r\n\t\t\t</div>-->\r\n      <!-- 输入框 -->\r\n      <!-- 登录 -->\r\n      <div class=\"right_form\">\r\n        <el-form class=\"login_form\"\r\n                 ref=\"loginFormRef\"\r\n                 :model=\"loginForm\"\r\n                 :rules=\"loginFormRules\"\r\n                 label-width=\"0px\">\r\n          <div class=\"title\">\r\n            <i class=\"el-icon-s-platform\"></i>登录系统\r\n          </div>\r\n          <!-- 账号 -->\r\n          <el-form-item prop=\"username\"\r\n                        class=\"username_input\">\r\n            <el-input v-model=\"loginForm.username\"\r\n                      placeholder=\"请输入账号\"\r\n                      prefix-icon=\"iconfont icon-user\"></el-input>\r\n          </el-form-item>\r\n          <!-- 密码 -->\r\n          <el-form-item prop=\"password\"\r\n                        class=\"username_input\">\r\n            <el-input v-model=\"loginForm.password\"\r\n                      placeholder=\"请输入密码\"\r\n                      prefix-icon=\"iconfont icon-3702mima\"\r\n                      type=\"password\"></el-input>\r\n          </el-form-item>\r\n          <!-- 按钮区域 -->\r\n          <el-form-item class=\"btns\">\r\n            <el-button class=\"loginIn\"\r\n                       type=\"info\"\r\n                       @click=\"login\">Sign in</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { login_api } from \"@/api\"\r\nexport default {\r\n  data () {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      // 表单验证规则\r\n      loginFormRules: {\r\n        // 验证用户名\r\n        username: [{ required: true, message: '请输入账号', trigger: 'blur' }, { min: 3, max: 20, message: '3 to 20 characters in length', trigger: 'blur' }],\r\n        // 验证密码\r\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }, { min: 3, max: 6, message: '3 to 6 characters in length', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    var lett = this\r\n    document.onkeydown = function (e) {\r\n      var key = window.event.keyCode\r\n      console.log(key, e);\r\n\r\n      if (key == 13) {\r\n        lett.login()\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    reset () {\r\n      this.$refs.loginFormRef.resetFields()\r\n    },\r\n    login () {\r\n      this.$refs.loginFormRef.validate(async valid => {\r\n        if (!valid) return this.$message.error('输入错误')\r\n        const { data: res } = await login_api(this.loginForm)\r\n        if (res.statu !== 200) return this.$message.error(res.mes ? res.mes : 'Login failed')\r\n        this.$message.success(res.mes ? res.mes : '登录成功')\r\n        // 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\r\n        //   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\r\n        //   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\r\n        window.sessionStorage.setItem('token', res.data.token)\r\n        // 跳转到index页面\r\n        this.$router.push('/admin/index')\r\n      })\r\n    }\r\n  }\r\n};\r\n</script>\r\n    <style lang=\"less\" scoped>\r\n    .component_login {\r\n    \twidth: 100%;\r\n    \theight: 100%;\r\n\t\t  background: url(../assets/background.jpg) no-repeat;\r\n\t\t  background-size: cover;\r\n\t\t  position: absolute;\r\n\t\t  overflow: hidden;\r\n    \t.login_box {\r\n    \t\twidth: 650px;\r\n    \t\theight: 350px;\r\n    \t\tbackground-color: #FFFFF0;\r\n    \t\tposition: absolute;\r\n    \t\ttop: 50%;\r\n    \t\tleft: 50%;\r\n    \t\ttransform: translate(-50%, -50%);\r\n\t\t\t  border-radius: 5px;\r\n\t\t\t  overflow: hidden;\r\n\t\t\t  display: flex;\r\n\t\t\t  justify-content: space-between;\r\n\t\t\t  align-items: center;\r\n\t\t\t.left_img {\r\n\t\t\t\twidth: 250px;\r\n\t\t\t\theight: 350px;\r\n\t\t\t}\r\n    \t\t.login_form {\r\n\t\t\t\tmargin-right: 60px;\r\n    \t\t\t.btns {\r\n    \t\t\t\tdisplay: flex;\r\n    \t\t\t\tjustify-content: center;\r\n\t\t\t\t\t.loginIn{\r\n\t\t\t\t\t\twidth:200px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t.title {\r\n\t\t\t\t\tfont-size: 16px;\r\n\t\t\t\t\tcolor: #000;\r\n\t\t\t\t\theight: 35px;\r\n\t\t\t\t\tline-height: 35px;\r\n\t\t\t\t\ti {\r\n\t\t\t\t\t\tcolor: #75B9E6;\r\n\t\t\t\t\t\tmargin-right:10px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t.username_input{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t\t/deep/ input {\r\n\t\t\t\t\t // border:1px solid #FFFFF0;\r\n\t\t\t\t\t width: 300px;\r\n\t\t\t\t\t background-color: #FFFFF0;\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n    \t\t}\r\n    \t}\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}