{"remainingRequest":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\babel-loader\\lib\\index.js!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\src\\components\\Login.vue","mtime":1576915348367},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\文档\\item\\课程\\就业班\\day60-vuejs\\电商项目\\3.项目实战day1\\素材\\my_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\\\u6587\\u6863\\\\item\\\\\\u8BFE\\u7A0B\\\\\\u5C31\\u4E1A\\u73ED\\\\day60-vuejs\\\\\\u7535\\u5546\\u9879\\u76EE\\\\3.\\u9879\\u76EE\\u5B9E\\u6218day1\\\\\\u7D20\\u6750\\\\my_shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { login_api } from \"@/api\";\nexport default {\n  data: function data() {\n    return {\n      loginForm: {\n        username: 'admin',\n        password: '000000'\n      },\n      // 表单验证规则\n      loginFormRules: {\n        // 验证用户名\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }],\n        // 验证密码\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 6,\n          message: '长度在 3 到 6 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    reset: function reset() {\n      // console.log(this.$refs.loginFormRef);\n      this.$refs.loginFormRef.resetFields();\n    },\n    login: function login() {\n      var _this = this;\n\n      this.$refs.loginFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(valid) {\n          var _ref2, res;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log(valid, '登录');\n\n                  if (valid) {\n                    _context.next = 3;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", _this.$message.error('输入有误'));\n\n                case 3:\n                  _context.next = 5;\n                  return login_api(_this.loginForm);\n\n                case 5:\n                  _ref2 = _context.sent;\n                  res = _ref2.data;\n                  console.log(res);\n\n                  if (!(res.status != 200)) {\n                    _context.next = 10;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", _this.$message.error('登录失败'));\n\n                case 10:\n                  _this.$message.success('登录成功'); // 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\n                  //   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\n                  //   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\n\n\n                  window.sessionStorage.setItem('token', res.data.token); // 跳转到home页面\n\n                  _this.$router.push('/home');\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,SAAA,SAAA,QAAA,OAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,OADA;AAEA,QAAA,QAAA,EAAA;AAFA,OADA;AAKA;AACA,MAAA,cAAA,EAAA;AACA;AACA,QAAA,QAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,gBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,CAFA;AAGA;AACA,QAAA,QAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,OAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,OAAA,EAAA,eAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AAJA;AANA,KAAA;AAaA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,WAAA;AACA,KAJA;AAKA,IAAA,KALA,mBAKA;AAAA;;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAA,iBAAA,KAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA,IAAA;;AADA,sBAGA,KAHA;AAAA;AAAA;AAAA;;AAAA,mDAGA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAHA;;AAAA;AAAA;AAAA,yBAIA,SAAA,CAAA,KAAA,CAAA,SAAA,CAJA;;AAAA;AAAA;AAIA,kBAAA,GAJA,SAIA,IAJA;AAKA,kBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;;AALA,wBAMA,GAAA,CAAA,MAAA,IAAA,GANA;AAAA;AAAA;AAAA;;AAAA,mDAOA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAPA;;AAAA;AASA,kBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,EATA,CAUA;AACA;AACA;;;AACA,kBAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,OAAA,EAAA,GAAA,CAAA,IAAA,CAAA,KAAA,EAbA,CAcA;;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA;;AAAA;AAAA;AAAA;AAAA;AAiBA;AAvBA;AAhBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"component_login\">\r\n    <div class=\"login_box\">\r\n      <!-- 头像 -->\r\n      <div class=\"avatar_box\">\r\n        <img src=\"../assets/logo.png\" alt />\r\n      </div>\r\n      <!-- 输入框 -->\r\n      <!-- 登录 -->\r\n      <el-form\r\n        class=\"login_form\"\r\n        ref=\"loginFormRef\"\r\n        :model=\"loginForm\"\r\n        :rules=\"loginFormRules\"\r\n        label-width=\"0px\"\r\n      >\r\n        <!-- 账号 -->\r\n        <el-form-item prop=\"username\" class=\"username_input\">\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            placeholder=\"请输入账号\"\r\n            prefix-icon=\"iconfont icon-user\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <!-- 密码 -->\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"loginForm.password\"\r\n            placeholder=\"请输入密码\"\r\n            prefix-icon=\"iconfont icon-3702mima\"\r\n            type=\"password\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <!-- 按钮区域 -->\r\n        <el-form-item class=\"btns\">\r\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n          <el-button type=\"info\" @click=\"reset\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n    import {login_api} from \"@/api\"\r\n    export default {\r\n    \tdata() {\r\n    \t\treturn {\r\n    \t\t\tloginForm: {\r\n    \t\t\t\tusername: 'admin',\r\n    \t\t\t\tpassword: '000000'\r\n    \t\t\t},\r\n    \t\t\t// 表单验证规则\r\n    \t\t\tloginFormRules: {\r\n    \t\t\t\t// 验证用户名\r\n    \t\t\t\tusername: [{ required: true, message: '请输入用户名', trigger: 'blur' }, { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }],\r\n    \t\t\t\t// 验证密码\r\n    \t\t\t\tpassword: [{ required: true, message: '请输入密码', trigger: 'blur' }, { min: 3, max: 6, message: '长度在 3 到 6 个字符', trigger: 'blur' }]\r\n    \t\t\t}\r\n    \t\t}\r\n    \t},\r\n    \tmethods: {\r\n    \t\treset() {\r\n    \t\t\t// console.log(this.$refs.loginFormRef);\r\n    \t\t\tthis.$refs.loginFormRef.resetFields()\r\n    \t\t},\r\n    \t\tlogin() {\r\n    \t\t\tthis.$refs.loginFormRef.validate(async valid => {\r\n\t\t\t\t\tconsole.log(valid,'登录');\r\n\t\t\t\t\t\r\n    \t\t\t\tif (!valid) return this.$message.error('输入有误');\r\n                    const { data: res}=await login_api(this.loginForm);\r\n                    console.log(res);\r\n    \t\t\t\tif (res.status != 200) {\r\n    \t\t\t\t\treturn this.$message.error('登录失败');\r\n    \t\t\t\t}\r\n    \t\t\t\tthis.$message.success('登录成功');\r\n    \t\t\t\t// 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\r\n    \t\t\t\t//   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\r\n    \t\t\t\t//   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\r\n    \t\t\t\twindow.sessionStorage.setItem('token', res.data.token);\r\n    \t\t\t\t// 跳转到home页面\r\n    \t\t\t\tthis.$router.push('/home');\r\n    \t\t\t})\r\n    \t\t}\r\n    \t}\r\n    };\r\n    </script>\r\n    <style lang=\"less\" scoped>\r\n    .component_login {\r\n    \twidth: 100%;\r\n    \theight: 100%;\r\n    \tbackground-color: #2b4b6b;\r\n    \t.login_box {\r\n    \t\twidth: 450px;\r\n    \t\theight: 300px;\r\n    \t\tbackground-color: #fff;\r\n    \t\tposition: absolute;\r\n    \t\ttop: 50%;\r\n    \t\tleft: 50%;\r\n    \t\ttransform: translate(-50%, -50%);\r\n    \t\tborder-radius: 10px;\r\n    \t\t.avatar_box {\r\n    \t\t\theight: 130px;\r\n    \t\t\twidth: 130px;\r\n    \t\t\tborder: 10px solid #fff;\r\n    \t\t\tbackground-color: #eee;\r\n    \t\t\tborder-radius: 50%;\r\n    \t\t\toverflow: hidden;\r\n    \t\t\tposition: absolute;\r\n    \t\t\ttop: 0;\r\n    \t\t\tleft: 50%;\r\n    \t\t\ttransform: translate(-50%, -50%);\r\n    \t\t\tbox-shadow: 0 0 10px #ddd;\r\n    \t\t\timg {\r\n    \t\t\t\twidth: 100%;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t\t.login_form {\r\n    \t\t\tposition: absolute;\r\n    \t\t\tbottom: 0;\r\n    \t\t\twidth: 100%;\r\n    \t\t\tpadding: 0 20px;\r\n    \t\t\tbox-sizing: border-box;\r\n    \t\t\t.btns {\r\n    \t\t\t\tdisplay: flex;\r\n    \t\t\t\tjustify-content: center;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}