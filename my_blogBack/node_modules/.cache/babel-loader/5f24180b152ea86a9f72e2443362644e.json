{"remainingRequest":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\babel-loader\\lib\\index.js!D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\src\\components\\common\\colorPicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\src\\components\\common\\colorPicker.vue","mtime":1590315235002},{"path":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\开发\\个人服务器\\pengwang.xyz\\my_blogBack\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar version = require(\"element-ui/package.json\").version; // 版本号\n\n\nvar ORIGINAL_THEME = \"#409EFF\";\nexport default {\n  name: \"colorPicker\",\n  data: function data() {\n    return {\n      chalk: \"\",\n      theme: ORIGINAL_THEME,\n      predefineColors: [\"#409EFF\", \"#ff4500\", \"#ff8c00\", \"#ffd700\", \"#90ee90\", \"#00ced1\", \"#1e90ff\", \"#c71585\", \"rgba(255, 69, 0, 0.68)\", \"rgb(255, 120, 0)\", \"hsv(51, 100, 98)\", \"hsva(120, 40, 94, 0.5)\", \"hsl(181, 100%, 37%)\", \"hsla(209, 100%, 56%, 0.73)\", \"#c7158577\"]\n    };\n  },\n  mounted: function mounted() {\n    console.log('后台主题色选择工具');\n\n    if (this.CheckIsColor(localStorage.getItem('colorPicker'))) {\n      this.theme = localStorage.getItem('colorPicker');\n    }\n  },\n  watch: {\n    theme: function theme(val, oldVal) {\n      var _this = this;\n\n      if (typeof val !== \"string\") return;\n      localStorage.setItem('colorPicker', val);\n      console.log(val, '设置主题色');\n\n      if (val) {\n        this.$store.commit('editThemeColor', val);\n      }\n\n      var themeCluster = this.getThemeCluster(val.replace(\"#\", \"\"));\n      var originalCluster = this.getThemeCluster(oldVal.replace(\"#\", \"\"));\n\n      var getHandler = function getHandler(variable, id) {\n        return function () {\n          var originalCluster = _this.getThemeCluster(ORIGINAL_THEME.replace(\"#\", \"\"));\n\n          var newStyle = _this.updateStyle(_this[variable], originalCluster, themeCluster);\n\n          var styleTag = document.getElementById(id);\n\n          if (!styleTag) {\n            styleTag = document.createElement(\"style\");\n            styleTag.setAttribute(\"id\", id);\n            document.head.appendChild(styleTag);\n          }\n\n          styleTag.innerText = newStyle;\n        };\n      };\n\n      var chalkHandler = getHandler(\"chalk\", \"chalk-style\");\n\n      if (!this.chalk) {\n        var url = \"https://unpkg.com/element-ui@\".concat(version, \"/lib/theme-chalk/index.css\");\n        this.getCSSString(url, chalkHandler, \"chalk\");\n      } else {\n        chalkHandler();\n      }\n\n      var styles = [].slice.call(document.querySelectorAll(\"style\")).filter(function (style) {\n        var text = style.innerText;\n        return new RegExp(oldVal, \"i\").test(text) && !/Chalk Variables/.test(text);\n      });\n      styles.forEach(function (style) {\n        var innerText = style.innerText;\n        if (typeof innerText !== \"string\") return;\n        style.innerText = _this.updateStyle(innerText, originalCluster, themeCluster);\n      });\n    }\n  },\n  methods: {\n    CheckIsColor: function CheckIsColor(bgVal) {\n      console.log(bgVal, '初始化主题色');\n      if (!bgVal) return false;\n      this.$store.commit('editThemeColor', bgVal);\n      var type = \"^#[0-9a-fA-F]{6}$\";\n      var re = new RegExp(type);\n\n      if (bgVal.match(re) == null) {\n        type = \"^[rR][gG][Bb][\\(]([\\\\s]*(2[0-4][0-9]|25[0-5]|[01]?[0-9][0-9]?)[\\\\s]*,){2}[\\\\s]*(2[0-4]\\\\d|25[0-5]|[01]?\\\\d\\\\d?)[\\\\s]*[\\)]{1}$\";\n        re = new RegExp(type);\n\n        if (bgVal.match(re) == null) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    },\n    updateStyle: function updateStyle(style, oldCluster, newCluster) {\n      var newStyle = style;\n      oldCluster.forEach(function (color, index) {\n        newStyle = newStyle.replace(new RegExp(color, \"ig\"), newCluster[index]);\n      });\n      return newStyle;\n    },\n    getCSSString: function getCSSString(url, callback, variable) {\n      var _this2 = this;\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          _this2[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, \"\");\n          callback();\n        }\n      };\n\n      xhr.open(\"GET\", url);\n      xhr.send();\n    },\n    getThemeCluster: function getThemeCluster(theme) {\n      var tintColor = function tintColor(color, tint) {\n        var red = parseInt(color.slice(0, 2), 16);\n        var green = parseInt(color.slice(2, 4), 16);\n        var blue = parseInt(color.slice(4, 6), 16);\n\n        if (tint === 0) {\n          // when primary color is in its rgb space\n          return [red, green, blue].join(\",\");\n        } else {\n          red += Math.round(tint * (255 - red));\n          green += Math.round(tint * (255 - green));\n          blue += Math.round(tint * (255 - blue));\n          red = red.toString(16);\n          green = green.toString(16);\n          blue = blue.toString(16);\n          return \"#\".concat(red).concat(green).concat(blue);\n        }\n      };\n\n      var shadeColor = function shadeColor(color, shade) {\n        var red = parseInt(color.slice(0, 2), 16);\n        var green = parseInt(color.slice(2, 4), 16);\n        var blue = parseInt(color.slice(4, 6), 16);\n        red = Math.round((1 - shade) * red);\n        green = Math.round((1 - shade) * green);\n        blue = Math.round((1 - shade) * blue);\n        red = red.toString(16);\n        green = green.toString(16);\n        blue = blue.toString(16);\n        return \"#\".concat(red).concat(green).concat(blue);\n      };\n\n      var clusters = [theme];\n\n      for (var i = 0; i <= 9; i++) {\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\n      }\n\n      clusters.push(shadeColor(theme, 0.1));\n      return clusters;\n    }\n  }\n};",{"version":3,"sources":["colorPicker.vue"],"names":[],"mappings":"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","sourcesContent":["\r\n<template>\r\n    <el-color-picker\r\n        v-model=\"theme\"\r\n        class=\"theme-picker\"\r\n        :predefine=\"predefineColors\"\r\n        popper-class=\"theme-picker-dropdown\"\r\n    ></el-color-picker>\r\n</template>\r\n \r\n<script>\r\nconst version = require(\"element-ui/package.json\").version; // 版本号\r\nconst ORIGINAL_THEME = \"#409EFF\";\r\n \r\nexport default {\r\n  name: \"colorPicker\",\r\n  data() {\r\n    return {\r\n      chalk: \"\",\r\n      theme:ORIGINAL_THEME,\r\n      predefineColors: [\r\n        \"#409EFF\",\r\n        \"#ff4500\",\r\n        \"#ff8c00\",\r\n        \"#ffd700\",\r\n        \"#90ee90\",\r\n        \"#00ced1\",\r\n        \"#1e90ff\",\r\n        \"#c71585\",\r\n        \"rgba(255, 69, 0, 0.68)\",\r\n        \"rgb(255, 120, 0)\",\r\n        \"hsv(51, 100, 98)\",\r\n        \"hsva(120, 40, 94, 0.5)\",\r\n        \"hsl(181, 100%, 37%)\",\r\n        \"hsla(209, 100%, 56%, 0.73)\",\r\n        \"#c7158577\"\r\n      ]\r\n    };\r\n  },\r\n  mounted(){\r\n    console.log('后台主题色选择工具');\r\n    if(this.CheckIsColor(localStorage.getItem('colorPicker'))){\r\n      this.theme=localStorage.getItem('colorPicker')\r\n    }\r\n  },\r\n  watch: {\r\n    theme(val, oldVal) {\r\n      if (typeof val !== \"string\") return;\r\n      localStorage.setItem('colorPicker',val)\r\n      console.log(val,'设置主题色');\r\n      if(val){\r\n        this.$store.commit('editThemeColor',val) \r\n        }\r\n      const themeCluster = this.getThemeCluster(val.replace(\"#\", \"\"));\r\n      const originalCluster = this.getThemeCluster(oldVal.replace(\"#\", \"\"));\r\n      const getHandler = (variable, id) => {\r\n        return () => {\r\n          const originalCluster = this.getThemeCluster(\r\n            ORIGINAL_THEME.replace(\"#\", \"\")\r\n          );\r\n          const newStyle = this.updateStyle(\r\n            this[variable],\r\n            originalCluster,\r\n            themeCluster\r\n          );\r\n \r\n          let styleTag = document.getElementById(id);\r\n          if (!styleTag) {\r\n            styleTag = document.createElement(\"style\");\r\n            styleTag.setAttribute(\"id\", id);\r\n            document.head.appendChild(styleTag);\r\n          }\r\n          styleTag.innerText = newStyle;\r\n        };\r\n      };\r\n \r\n      const chalkHandler = getHandler(\"chalk\", \"chalk-style\");\r\n \r\n      if (!this.chalk) {\r\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`;\r\n        this.getCSSString(url, chalkHandler, \"chalk\");\r\n      } else {\r\n        chalkHandler();\r\n      }\r\n \r\n      const styles = [].slice\r\n        .call(document.querySelectorAll(\"style\"))\r\n        .filter(style => {\r\n          const text = style.innerText;\r\n          return (\r\n            new RegExp(oldVal, \"i\").test(text) && !/Chalk Variables/.test(text)\r\n          );\r\n        });\r\n      styles.forEach(style => {\r\n        const { innerText } = style;\r\n        if (typeof innerText !== \"string\") return;\r\n        style.innerText = this.updateStyle(\r\n          innerText,\r\n          originalCluster,\r\n          themeCluster\r\n        );\r\n      });\r\n \r\n    }\r\n  },\r\n \r\n  methods: {\r\n    CheckIsColor(bgVal) {\r\n    console.log(bgVal,'初始化主题色');\r\n    if(!bgVal)return false\r\n    this.$store.commit('editThemeColor',bgVal)  \r\n    \r\n　　var type = \"^#[0-9a-fA-F]{6}$\"; \r\n　　var re = new RegExp(type); \r\n　　if (bgVal.match(re) == null) { \r\n　　　　type = \"^[rR][gG][Bb][\\(]([\\\\s]*(2[0-4][0-9]|25[0-5]|[01]?[0-9][0-9]?)[\\\\s]*,){2}[\\\\s]*(2[0-4]\\\\d|25[0-5]|[01]?\\\\d\\\\d?)[\\\\s]*[\\)]{1}$\"; \r\n　　　　re = new RegExp(type); \r\n　　　　if (bgVal.match(re) == null) { \r\n　　　　　　return false;\r\n　　　　} else { \r\n　　　　　　return true;\r\n　　　　} \r\n　　　} else { \r\n　　　　return true;\r\n　　} \r\n},\r\n    updateStyle(style, oldCluster, newCluster) {\r\n      let newStyle = style;\r\n      oldCluster.forEach((color, index) => {\r\n        newStyle = newStyle.replace(new RegExp(color, \"ig\"), newCluster[index]);\r\n      });\r\n      return newStyle;\r\n    },\r\n \r\n    getCSSString(url, callback, variable) {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.onreadystatechange = () => {\r\n        if (xhr.readyState === 4 && xhr.status === 200) {\r\n          this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, \"\");\r\n          callback();\r\n        }\r\n      };\r\n      xhr.open(\"GET\", url);\r\n      xhr.send();\r\n    },\r\n \r\n    getThemeCluster(theme) {\r\n      const tintColor = (color, tint) => {\r\n        let red = parseInt(color.slice(0, 2), 16);\r\n        let green = parseInt(color.slice(2, 4), 16);\r\n        let blue = parseInt(color.slice(4, 6), 16);\r\n \r\n        if (tint === 0) {\r\n          // when primary color is in its rgb space\r\n          return [red, green, blue].join(\",\");\r\n        } else {\r\n          red += Math.round(tint * (255 - red));\r\n          green += Math.round(tint * (255 - green));\r\n          blue += Math.round(tint * (255 - blue));\r\n \r\n          red = red.toString(16);\r\n          green = green.toString(16);\r\n          blue = blue.toString(16);\r\n \r\n          return `#${red}${green}${blue}`;\r\n        }\r\n      };\r\n \r\n      const shadeColor = (color, shade) => {\r\n        let red = parseInt(color.slice(0, 2), 16);\r\n        let green = parseInt(color.slice(2, 4), 16);\r\n        let blue = parseInt(color.slice(4, 6), 16);\r\n \r\n        red = Math.round((1 - shade) * red);\r\n        green = Math.round((1 - shade) * green);\r\n        blue = Math.round((1 - shade) * blue);\r\n \r\n        red = red.toString(16);\r\n        green = green.toString(16);\r\n        blue = blue.toString(16);\r\n \r\n        return `#${red}${green}${blue}`;\r\n      };\r\n \r\n      const clusters = [theme];\r\n      for (let i = 0; i <= 9; i++) {\r\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\r\n      }\r\n      clusters.push(shadeColor(theme, 0.1));\r\n      return clusters;\r\n    }\r\n  }\r\n};\r\n</script>\r\n \r\n<style>\r\n.theme-picker .el-color-picker__trigger {\r\n  vertical-align: middle;\r\n}\r\n \r\n.theme-picker-dropdown .el-color-dropdown__link-btn {\r\n  display: none;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/common"}]}