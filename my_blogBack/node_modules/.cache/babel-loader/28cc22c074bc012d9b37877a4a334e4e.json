{"remainingRequest":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\Book\\BookInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\Book\\BookInfo.vue","mtime":1577161940726},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\wangpeng\\\\Desktop\\\\mt\\\\vue-ht\\\\my_project\\\\my_library\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { books_api } from \"@/api\";\nimport moment from 'moment'; //时间过滤插件\n\nexport default {\n  data: function data() {\n    return {\n      common: '',\n      //公共组件传值\n      input1: '',\n      value1: '',\n      tableData: []\n    };\n  },\n  filters: {\n    formatDate: function formatDate(value) {\n      return moment(value).format('YYYY-MM-DD');\n    }\n  },\n  created: function created() {\n    this.getBookAll();\n  },\n  methods: {\n    getBookAll: function () {\n      var _getBookAll = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res, i;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return books_api();\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error(res.msg));\n\n              case 6:\n                for (i in res.data) {\n                  res.data[i].createdAt = moment(res.data[i].createdAt).format('YYYY-MM-DD');\n                }\n\n                this.tableData = res.data;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getBookAll() {\n        return _getBookAll.apply(this, arguments);\n      }\n\n      return getBookAll;\n    }()\n  },\n  mounted: function mounted() {// this.getBookAll()\n  }\n};",{"version":3,"sources":["BookInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA,SAAA,SAAA,QAAA,OAAA;AACA,OAAA,MAAA,MAAA,QAAA,C,CAAA;;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AACA;AACA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,SAAA,EAAA;AAJA,KAAA;AAMA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,oBAAA,KAAA,EAAA;AACA,aAAA,MAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAAA;AACA;AAHA,GATA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,UAAA;AACA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGA,SAAA,EAHA;;AAAA;AAAA;AAGA,gBAAA,GAHA,QAGA,IAHA;;AAAA,sBAIA,GAAA,CAAA,MAAA,KAAA,GAJA;AAAA;AAAA;AAAA;;AAAA,iDAIA,KAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA,CAJA;;AAAA;AAKA,qBAAA,CAAA,IAAA,GAAA,CAAA,IAAA,EAAA;AACA,kBAAA,GAAA,CAAA,IAAA,CAAA,CAAA,EAAA,SAAA,GAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAAA;AACA;;AACA,qBAAA,SAAA,GAAA,GAAA,CAAA,IAAA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAjBA;AA4BA,EAAA,OA5BA,qBA4BA,CACA;AACA;AA9BA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 导航 -->\r\n    <Breadcrumb :value=\"common\"></Breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      Book information management\r\n    </el-card>\r\n    <el-row class=\"checking\">\r\n      <el-col :span=\"18\"><div class=\"grid-content bg-purple\">\r\n      <span class=\"com_title\">Title of book：</span><el-input  \r\n      \tclass='codeName'\r\n      \tref='com_name'\r\n      \tplaceholder=\"Please enter the book name\"\r\n      \tv-model=\"input1\"\r\n      \tclearable>\r\n      </el-input>\r\n      <span class=\"com_title\">Book bar code：</span><el-input\r\n      \tclass='codeName'\r\n      \tref='com_code'\r\n      \tplaceholder=\"Please input the book barcode\"\r\n      \tv-model=\"value1\"\r\n      \tclearable>\r\n      </el-input>\r\n      <el-button type=\"primary\" @click=''>Query</el-button> <!-- //查询 -->\r\n      <el-button plain @click=''>Reset</el-button> <!-- // 重置 -->\r\n      </div></el-col>\r\n      <el-col :span=\"6\"><div class=\"grid-content bg-purple-light\">\r\n        <el-button type=\"primary\" @click='' class=\"add\">New book information</el-button> <!-- //新建 -->\r\n      </div></el-col>\r\n    </el-row>\r\n    <el-table\r\n      :data=\"tableData\"\r\n      style=\"width: 100%\">\r\n      <el-table-column\r\n        prop=\"title\"\r\n        label=\"Title of book\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"isbn\"\r\n        label=\"Book bar code\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"name\"\r\n        label=\"Book author\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"createdAt\"\r\n        label=\"date\">\r\n      </el-table-column>\r\n      <el-table-column label=\"Operation\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                size=\"mini\"\r\n                @click=\"handleEdit(scope.$index, scope.row)\">Edit</el-button> <!-- 编辑 -->\r\n              <el-button\r\n                size=\"mini\"\r\n                type=\"danger\"\r\n                @click=\"handleDelete(scope.$index, scope.row)\">Delete</el-button> <!-- 删除 -->\r\n            </template>\r\n          </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n    class='page_size'\r\n      background\r\n      layout=\"prev, pager, next\"\r\n      :total=\"1000\">\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {books_api} from \"@/api\"\r\n  import moment from 'moment' //时间过滤插件\r\nexport default {\r\n  data() {\r\n    return {\r\n      common: '', //公共组件传值\r\n      input1:'',\r\n      value1:'',\r\n      tableData: []\r\n    }\r\n  },\r\n  filters: {\r\n    formatDate: function (value) {\r\n      return moment(value).format('YYYY-MM-DD')\r\n    }\r\n  },\r\n  created() {\r\n    this.getBookAll()\r\n  },\r\n  methods: {\r\n      async getBookAll() {\r\n          //刷新home页面就请求图书信息\r\n          const { data: res } = await books_api()\r\n          if (res.status !== 200) return this.$message.error(res.msg)\r\n          for(var i in res.data){\r\n            res.data[i].createdAt = moment(res.data[i].createdAt).format('YYYY-MM-DD')\r\n          }\r\n          this.tableData = res.data\r\n      }\r\n  },\r\n  mounted() {\r\n    // this.getBookAll()\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.item {\r\n  margin-top: 10px;\r\n  margin-right: 40px;\r\n}\r\n.checking{\r\n  margin: 20px 0;\r\n  .codeName{\r\n    width: 12.5rem;margin-right: 10px;\r\n  }\r\n  .add{float: right;}\r\n}\r\n.page_size{display: inline-block;float: right;}\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/Book"}]}