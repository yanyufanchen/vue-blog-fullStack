{"remainingRequest":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\goods\\Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\src\\components\\goods\\Add.vue","mtime":1565523897648},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wangpeng\\Desktop\\mt\\vue-ht\\my_project\\my_library\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\wangpeng\\\\Desktop\\\\mt\\\\vue-ht\\\\my_project\\\\my_library\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getCategoriesList_api, addGoods_api } from '@/api';\nimport { getCateParamsCommon } from '@/api/compute.js';\nimport { quillEditor } from 'vue-quill-editor'; //导入vue-quill-editor的样式\n\nimport 'quill/dist/quill.core.css';\nimport 'quill/dist/quill.snow.css';\nimport 'quill/dist/quill.bubble.css';\nimport _ from 'lodash';\nexport default {\n  components: {\n    quillEditor: quillEditor\n  },\n  data: function data() {\n    return {\n      common: ['商品管理', '添加商品'],\n      //公共组件传值\n      activeIndex: 0,\n      //步骤进度序列号\n      tabPosition: 'left',\n      //tab栏显示方向\n      // 基本信息value\n      addGoodsForm: {\n        goods_name: '',\n        goods_price: 0,\n        goods_weight: 0,\n        goods_number: 0,\n        goods_cat: [],\n        //上传图片数组\n        pics: [],\n        attrs: [],\n        goods_introduce: ''\n      },\n      selectedKeys: [],\n      //分类选择数组  \n      options: [],\n      //分类渲染参数\n      labelPosition: 'top',\n      //   表单验证\n      checkAddForm: {\n        goods_name: [{\n          required: true,\n          message: '请输入参数名称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 8,\n          message: '长度在 2 到 8 个字符',\n          trigger: 'blur'\n        }],\n        goods_price: [{\n          required: true,\n          message: '请输入商品价格',\n          trigger: 'blur'\n        }],\n        goods_weight: [{\n          required: true,\n          message: '请输入商品重量',\n          trigger: 'blur'\n        }],\n        goods_number: [{\n          required: true,\n          message: '请输入商品数量',\n          trigger: 'blur'\n        }]\n      },\n      //   获取参数属性的传参\n      goodsParams: {\n        id: '',\n        sel: ''\n      },\n      onlyParams: [],\n      //获取静态参数\n      manyParams: [],\n      //获取动态参数\n      fileList: [],\n      //上传的文件列表\n      //图片上传组件的headers请求头对象\n      headerObj: {\n        Authorization: window.sessionStorage.getItem('token')\n      },\n      imgVisible: false,\n      //图片对话框\n      previewPath: '' //图片预览地址\n\n    };\n  },\n  methods: {\n    //tab栏切换触发\n    handleClick: function handleClick(tab, event) {},\n    //tab栏判断，不满足就不切换\n    beforeTabLeave: function beforeTabLeave(activeName, oldActiveName) {\n      // 判断变量\n      var res = true;\n\n      if (oldActiveName == '0') {\n        this.$refs.addGoodsFormref.validate(function (result) {\n          //   console.log(result, 666)\n          if (!result) {\n            res = false;\n          }\n        });\n\n        if (this.selectedKeys.length < 3) {\n          res = false;\n          this.$message.error('请选择商品分类列表');\n        }\n      }\n\n      return res;\n    },\n    // 分类选择器change事件\n    handleChange: function handleChange() {\n      this.addGoodsForm.goods_cat = this.selectedKeys;\n    },\n    //获取分类信息\n    getGoodsCateList: function () {\n      var _getGoodsCateList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getCategoriesList_api();\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取商品分类列表失败'));\n\n              case 6:\n                this.$message.success('获取商品分类列表成功');\n                this.options = res.data;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getGoodsCateList() {\n        return _getGoodsCateList.apply(this, arguments);\n      }\n\n      return getGoodsCateList;\n    }(),\n    // 获取商品参数/商品属性\n    getCateParams: function getCateParams() {\n      var _this = this;\n\n      // console.log(this.activeIndex);\n      if (this.activeIndex == 1) {\n        this.goodsParams.sel = 'many';\n        this.goodsParams.id = this.selectedKeys[this.selectedKeys.length - 1];\n      } else if (this.activeIndex == 2) {\n        this.goodsParams.sel = 'only';\n        this.goodsParams.id = this.selectedKeys[this.selectedKeys.length - 1];\n      }\n\n      if (this.activeIndex == 1 || this.activeIndex == 2) {\n        getCateParamsCommon(this.goodsParams).then(function (res) {\n          if (res.meta.status !== 200) return _this.$message.error('获取参数属性失败');\n\n          _this.$message.success('获取参数属性成功');\n\n          res.data.forEach(function (item) {\n            item.attr_vals.length > 0 ? item.attr_vals = item.attr_vals.split(',') : item.attr_vals = [];\n          });\n          _this.goodsParams.sel == 'many' ? _this.manyParams = res.data : _this.onlyParams = res.data; //   console.log(this.manyParams)\n          //   console.log(this.onlyParams)\n        });\n      }\n    },\n    // 点击图片叉号触发的函数\n    handleRemove: function handleRemove(file) {\n      //   console.log(file)\n      var filePath = file.response.data.tmp_path;\n      var index = this.addGoodsForm.pics.findIndex(function (item) {\n        return item.pic === filePath;\n      }); //   移除数组图片指定项\n\n      this.addGoodsForm.pics.splice(index, 1);\n    },\n    // 点击图片触发的函数\n    handlePreview: function handlePreview(file, fileList) {\n      this.previewPath = file.response.data.url;\n      this.imgVisible = true;\n    },\n    // 上传图片成功执行函数\n    uploadSuccess: function uploadSuccess(response, file, fileList) {\n      console.log(response, file, fileList);\n      if (response.meta.status !== 200) return this.$message.error('上传图片失败');\n      this.$message.success('上传图片成功');\n      this.addGoodsForm.pics.push({\n        pic: response.data.tmp_path\n      });\n    },\n    // 添加商品提交\n    add: function () {\n      var _add = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.$refs.addGoodsFormref.validate(\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee2(valid) {\n                    var form, _ref3, res;\n\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (valid) {\n                              _context2.next = 2;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\", _this2.$message.error('请填写完整的信息'));\n\n                          case 2:\n                            form = _.cloneDeep(_this2.addGoodsForm);\n                            form.goods_cat = form.goods_cat.join(','); // 将动态参数添加进去\n                            // console.log(this.manyParams);\n\n                            _this2.manyParams.forEach(function (item) {\n                              form.attrs.push({\n                                attr_id: item.attr_id,\n                                attr_value: item.attr_vals.join(\" \")\n                              });\n                            }); // 将静态参数添加进去\n                            // console.log(this.onlyParams);\n\n\n                            _this2.onlyParams.forEach(function (item) {\n                              form.attrs.push({\n                                attr_id: item.attr_id,\n                                attr_value: item.attr_vals[0]\n                              });\n                            });\n\n                            _context2.next = 8;\n                            return addGoods_api(form);\n\n                          case 8:\n                            _ref3 = _context2.sent;\n                            res = _ref3.data;\n\n                            if (!(res.meta.status !== 201)) {\n                              _context2.next = 12;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\", _this2.$message.error('添加商品失败'));\n\n                          case 12:\n                            _this2.$message.success('添加商品成功'); // 跳转到商品列表\n\n\n                            _this2.$router.push('/goods');\n\n                          case 14:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function add() {\n        return _add.apply(this, arguments);\n      }\n\n      return add;\n    }()\n  },\n  created: function created() {\n    this.getGoodsCateList();\n  },\n  computed: {}\n};",{"version":3,"sources":["Add.vue"],"names":[],"mappings":"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","sourcesContent":["<!--  -->\r\n<template>\r\n  <div>\r\n    <Breadcrumb :value=\"common\"></Breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      <!-- 提示 -->\r\n      <el-alert title=\"添加商品信息\" type=\"info\" center show-icon :closable=\"false\"></el-alert>\r\n      <!-- 步骤条 -->\r\n      <el-steps :active=\"activeIndex-0\" align-center>\r\n        <el-step title=\"基本信息\"></el-step>\r\n        <el-step title=\"商品参数\"></el-step>\r\n        <el-step title=\"商品属性\"></el-step>\r\n        <el-step title=\"商品图片\"></el-step>\r\n        <el-step title=\"商品内容\"></el-step>\r\n        <el-step title=\"完成\"></el-step>\r\n      </el-steps>\r\n      <!-- tab栏切换 -->\r\n      <el-form\r\n        :model=\"addGoodsForm\"\r\n        status-icon\r\n        :rules=\"checkAddForm\"\r\n        ref=\"addGoodsFormref\"\r\n        label-width=\"100px\"\r\n        class=\"demo-addGoodsForm\"\r\n        :label-position=\"labelPosition\"\r\n      >\r\n        <el-tabs\r\n          :tab-position=\"tabPosition\"\r\n          v-model=\"activeIndex\"\r\n          :before-leave=\"beforeTabLeave\"\r\n          :stretch=\"true\"\r\n          @tab-click=\"getCateParams\"\r\n        >\r\n          <div style=\"margin: 20px;\"></div>\r\n          <!-- 多级分类信息 -->\r\n          <!-- 基本信息 -->\r\n          <el-tab-pane label=\"基本信息\" name=\"0\" class=\"from\">\r\n            <el-form-item label=\"商品名称\" prop=\"goods_name\">\r\n              <el-input v-model=\"addGoodsForm.goods_name\" autocomplete=\"off\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品价格\" prop=\"goods_price\">\r\n              <el-input\r\n                type=\"number\"\r\n                v-model=\"addGoodsForm.goods_price\"\r\n                autocomplete=\"off\"\r\n                clearable\r\n              ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品重量\" prop=\"goods_weight\">\r\n              <el-input type=\"number\" v-model=\"addGoodsForm.goods_weight\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品数量\" prop=\"goods_number\">\r\n              <el-input type=\"number\" v-model=\"addGoodsForm.goods_number\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品分类\">\r\n              <el-cascader\r\n                style=\"width:20%\"\r\n                clearable\r\n                v-model=\"selectedKeys\"\r\n                :options=\"options\"\r\n                :props=\"{ \r\n                            expandTrigger: 'hover',\r\n                            value:'cat_id',\r\n                            label:'cat_name',\r\n                              children:'children'\r\n                             }\"\r\n                @change=\"handleChange\"\r\n              ></el-cascader>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品参数 -->\r\n          <el-tab-pane label=\"商品参数\" name=\"1\">\r\n            <!-- 渲染表单item项 -->\r\n            <el-form-item :label=\"item.attr_name\" :key=\"item.attr_id\" v-for=\"item in manyParams\">\r\n              <!-- 使用数组渲染复选框组 -->\r\n              <el-checkbox-group v-model=\"item.attr_vals\">\r\n                <el-checkbox border :label=\"val\" v-for=\"(val,i) in item.attr_vals\" :key=\"i\"></el-checkbox>\r\n              </el-checkbox-group>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品属性 -->\r\n          <el-tab-pane label=\"商品属性\" name=\"2\">\r\n            <!-- 循环生成静态属性 -->\r\n            <el-form-item :label=\"item.attr_name\" v-for=\"(item,i) in onlyParams\" :key=\"i\">\r\n              <el-input v-model=\"item.attr_vals[0]\"></el-input>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <!-- 商品图片 -->\r\n          <el-tab-pane label=\"商品图片\" name=\"3\">\r\n            <el-upload\r\n              class=\"upload-demo\"\r\n              action=\"http://127.0.0.1:8888/api/private/v1/upload\"\r\n              :on-preview=\"handlePreview\"\r\n              :on-remove=\"handleRemove\"\r\n              :on-success=\"uploadSuccess\"\r\n              :file-list=\"fileList\"\r\n              list-type=\"picture\"\r\n              :headers=\"headerObj\"\r\n            >\r\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过500kb</div>\r\n            </el-upload>\r\n          </el-tab-pane>\r\n          <!-- 商品内容 -->\r\n          <el-tab-pane label=\"商品内容\" name=\"4\">\r\n            <!-- 富文本编辑器组件 -->\r\n            <quill-editor v-model=\"addGoodsForm.goods_introduce\"></quill-editor>\r\n            <!-- 添加商品按钮 -->\r\n            <el-button type=\"primary\" class=\"btnAdd\" @click=\"add\">添加商品</el-button>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-form>\r\n      <!-- 预览图片对话框 -->\r\n      <el-dialog title=\"提示\" :visible.sync=\"imgVisible\" width=\"30%\" >\r\n        <img :src=\"previewPath\" alt=\"\" class=\"imgVisible\">\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCategoriesList_api ,addGoods_api} from '@/api'\r\nimport { getCateParamsCommon } from '@/api/compute.js'\r\nimport { quillEditor } from 'vue-quill-editor'\r\n//导入vue-quill-editor的样式\r\nimport 'quill/dist/quill.core.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport 'quill/dist/quill.bubble.css'\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n  components: {\r\n    quillEditor\r\n  },\r\n  data() {\r\n    return {\r\n      common: ['商品管理', '添加商品'], //公共组件传值\r\n      activeIndex: 0, //步骤进度序列号\r\n      tabPosition: 'left', //tab栏显示方向\r\n      // 基本信息value\r\n      addGoodsForm: {\r\n        goods_name: '',\r\n        goods_price: 0,\r\n        goods_weight: 0,\r\n        goods_number: 0,\r\n        goods_cat: [],\r\n        //上传图片数组\r\n        pics: [],\r\n        attrs: [],\r\n        goods_introduce: ''\r\n      },\r\n      selectedKeys: [], //分类选择数组  \r\n      options: [], //分类渲染参数\r\n      labelPosition: 'top',\r\n      //   表单验证\r\n      checkAddForm: {\r\n        goods_name: [\r\n          { required: true, message: '请输入参数名称', trigger: 'blur' },\r\n          { min: 2, max: 8, message: '长度在 2 到 8 个字符', trigger: 'blur' }\r\n        ],\r\n        goods_price: [\r\n          { required: true, message: '请输入商品价格', trigger: 'blur' }\r\n        ],\r\n        goods_weight: [\r\n          { required: true, message: '请输入商品重量', trigger: 'blur' }\r\n        ],\r\n        goods_number: [\r\n          { required: true, message: '请输入商品数量', trigger: 'blur' }\r\n        ]\r\n      },\r\n      //   获取参数属性的传参\r\n      goodsParams: {\r\n        id: '',\r\n        sel: ''\r\n      },\r\n      onlyParams: [], //获取静态参数\r\n      manyParams: [], //获取动态参数\r\n      fileList: [], //上传的文件列表\r\n      //图片上传组件的headers请求头对象\r\n      headerObj: { Authorization: window.sessionStorage.getItem('token') },\r\n      imgVisible:false,//图片对话框\r\n      previewPath:'',//图片预览地址\r\n    }\r\n  },\r\n  methods: {\r\n    //tab栏切换触发\r\n    handleClick(tab, event) {},\r\n    //tab栏判断，不满足就不切换\r\n    beforeTabLeave(activeName, oldActiveName) {\r\n      // 判断变量\r\n      var res = true\r\n      if (oldActiveName == '0') {\r\n        this.$refs.addGoodsFormref.validate(result => {\r\n        //   console.log(result, 666)\r\n          if (!result) {\r\n            res = false\r\n          }\r\n        })\r\n        if (this.selectedKeys.length < 3) {\r\n          res = false\r\n          this.$message.error('请选择商品分类列表')\r\n        }\r\n      }\r\n      return res\r\n    },\r\n    // 分类选择器change事件\r\n    handleChange() {\r\n      this.addGoodsForm.goods_cat = this.selectedKeys\r\n    },\r\n    //获取分类信息\r\n    async getGoodsCateList() {\r\n      const { data: res } = await getCategoriesList_api()\r\n      //   console.log(res)\r\n      if (res.meta.status !== 200)\r\n        return this.$message.error('获取商品分类列表失败')\r\n      this.$message.success('获取商品分类列表成功')\r\n      this.options = res.data\r\n    },\r\n    // 获取商品参数/商品属性\r\n    getCateParams() {\r\n      // console.log(this.activeIndex);\r\n      if (this.activeIndex == 1) {\r\n        this.goodsParams.sel = 'many'\r\n        this.goodsParams.id = this.selectedKeys[this.selectedKeys.length - 1]\r\n      } else if (this.activeIndex == 2) {\r\n        this.goodsParams.sel = 'only'\r\n        this.goodsParams.id = this.selectedKeys[this.selectedKeys.length - 1]\r\n      }\r\n      if (this.activeIndex == 1 || this.activeIndex == 2) {\r\n        getCateParamsCommon(this.goodsParams).then(res => {\r\n          if (res.meta.status !== 200)\r\n            return this.$message.error('获取参数属性失败')\r\n          this.$message.success('获取参数属性成功')\r\n          res.data.forEach(item => {\r\n            item.attr_vals.length > 0\r\n              ? (item.attr_vals = item.attr_vals.split(','))\r\n              : (item.attr_vals = [])\r\n          })\r\n          this.goodsParams.sel == 'many'\r\n            ? (this.manyParams = res.data)\r\n            : (this.onlyParams = res.data)\r\n        //   console.log(this.manyParams)\r\n        //   console.log(this.onlyParams)\r\n        })\r\n      }\r\n    },\r\n    // 点击图片叉号触发的函数\r\n    handleRemove(file) {\r\n    //   console.log(file)\r\n      const filePath = file.response.data.tmp_path\r\n      const index = this.addGoodsForm.pics.findIndex(\r\n        item => item.pic === filePath\r\n      )\r\n      //   移除数组图片指定项\r\n      this.addGoodsForm.pics.splice(index, 1)\r\n    },\r\n    // 点击图片触发的函数\r\n    handlePreview(file, fileList) {\r\n        this.previewPath = file.response.data.url\r\n        this.imgVisible=true;\r\n    },\r\n    // 上传图片成功执行函数\r\n    uploadSuccess(response, file, fileList) {\r\n      console.log(response, file, fileList)\r\n      if (response.meta.status !== 200)\r\n        return this.$message.error('上传图片失败')\r\n      this.$message.success('上传图片成功')\r\n      this.addGoodsForm.pics.push({ pic: response.data.tmp_path })\r\n    },\r\n    // 添加商品提交\r\n    async add() {\r\n        this.$refs.addGoodsFormref.validate(async valid=>{\r\n            if(!valid) return this.$message.error('请填写完整的信息')\r\n            const form=_.cloneDeep(this.addGoodsForm)\r\n            form.goods_cat=form.goods_cat.join(',')\r\n            // 将动态参数添加进去\r\n            // console.log(this.manyParams);\r\n            this.manyParams.forEach(item=>{\r\n                form.attrs.push({attr_id:item.attr_id,attr_value:item.attr_vals.join(\" \")})\r\n            })\r\n            // 将静态参数添加进去\r\n            // console.log(this.onlyParams);\r\n            this.onlyParams.forEach(item=>{\r\n                form.attrs.push({attr_id:item.attr_id,attr_value:item.attr_vals[0]})\r\n            })\r\n            const{data:res}=await addGoods_api(form)\r\n            if(res.meta.status!==201) return this.$message.error('添加商品失败')\r\n            this.$message.success('添加商品成功')\r\n            // 跳转到商品列表\r\n            this.$router.push('/goods')\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.getGoodsCateList()\r\n  },\r\n  computed: {}\r\n}\r\n</script>\r\n<style lang='less' scoped>\r\n.el-step {\r\n  font-size: 13px;\r\n}\r\n.from .el-input {\r\n  width: 100%;\r\n}\r\n.imgVisible {\r\n    width: 100%;\r\n}\r\n</style>"],"sourceRoot":"src/components/goods"}]}